local Library = loadstring(game:HttpGet("https://github.com/contateste8/RedzLibV4/raw/refs/heads/main/RedzLibV4.txt"))()

local validKey = "KEY_Wi9cismUPaZNaUU"
local savedKey = "SavedKey"

local function MainFunction()
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local Library = loadstring(game:HttpGet("https://github.com/contateste8/RedzLibV4/raw/refs/heads/main/RedzLibV4.txt"))()

local Window = Library:MakeWindow({
    Title = "Conta Teste Hub | V4 (P√°scoa " .. utf8.char(0x1F95A) .. utf8.char(0x1F430) .. ")",
    SubTitle = "By Conta Teste",
    LoadText = "Conta Teste Hub | Brookhaven RP üè°",
    Flags = "contateste"
})

local function VIPColors()
game:GetService("Players").LocalPlayer.PlayerGui.NoResetGUIHandler.MainAvatarMenu.Catalog.Container.ScrollingFrameName.NameBox.NameBioFrame.VIPColor1.Visible = true
game:GetService("Players").LocalPlayer.PlayerGui.NoResetGUIHandler.MainAvatarMenu.Catalog.Container.ScrollingFrameName.NameBox.NameBioFrame.VIPColor2.Visible = true
game:GetService("Players").LocalPlayer.PlayerGui.NoResetGUIHandler.MainAvatarMenu.Catalog.Container.ScrollingFrameName.NameBox.NameBioFrame.VIPColor3.Visible = true
end

local cleartoolremote = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Clea1rTool1s")
local picktoolremote = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")

local function safeskripz()
    if duping then
        print("Dupe Function ‚úÖÔ∏è")
        return true
    end

    if toolgrip == true then
        print("Tool Grip ‚úÖÔ∏è")
        return true
    end

    return false
end

local Tab1 = Window:MakeTab({"Principal", "Home"})
local Tools = Window:MakeTab({"Duplica√ß√µes de Tools", "tool"})
local Dia = Window:MakeTab({"Informa√ß√µes do Dia", "clock"})
local Detector = Window:MakeTab({"Detectores de Scripters", "user"})
local Client = Window:MakeTab({"Client", "signal"})
local FreeGamepass = Window:MakeTab({"Free Gamepass", "ticket"})
local Tab2 = Window:MakeTab({"Cr√©ditos", "newspaper"})

 Tab1:AddSection({"Fling"})

Tab1:AddButton({"Pegar Sof√°", function()
  local args = {
    [1] = "PickingTools",
    [2] = "Couch"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))
end})

local Targets = {""}
local LoopAtivo = false

Tab1:AddTextBox({
  Name = "Fling",
  Description = "Digite o Nome do Jogador",
  Default = "",
  Callback = function(Value)
    Targets[1] = Value
  end
})

local Toggle = Tab1:AddToggle({
  Name = "Ativar Fling",
  Default = false,
  Callback = function(Value)
    if Value then
      LoopAtivo = true
      task.spawn(function()
        while LoopAtivo do
          local player = game.Players.LocalPlayer
          local mouse = player:GetMouse()
          local Targets = {Targets[1]}
          
          local Players = game:GetService("Players")
          local Player = Players.LocalPlayer
          
          local AllBool = false
          
          local GetPlayer = function(Name)
            Name = Name:lower()
            if Name == "all" or Name == "others" then
              AllBool = true
              return
            elseif Name == "random" then
              local GetPlayers = Players:GetPlayers()
              if table.find(GetPlayers,Player) then table.remove(GetPlayers,table.find(GetPlayers,Player)) end
              return GetPlayers[math.random(#GetPlayers)]
            elseif Name ~= "random" and Name ~= "all" and Name ~= "others" then
              for _,x in next, Players:GetPlayers() do
                if x ~= Player then
                  if x.Name:lower():match("^"..Name) then
                    return x;
                  elseif x.DisplayName:lower():match("^"..Name) then
                    return x;
                  end
                end
              end
            else
              return
            end
          end
          
          local Message = function(_Title, _Text, Time)
            print(_Title)
            print(_Text)
            print(Time)
          end

          local SkidFling = function(TargetPlayer)
            local Character = Player.Character
            local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
            local RootPart = Humanoid and Humanoid.RootPart
            
            local TCharacter = TargetPlayer.Character
            local THumanoid
            local TRootPart
            local THead
            local Accessory
            local Handle
            
            if TCharacter:FindFirstChildOfClass("Humanoid") then
              THumanoid = TCharacter:FindFirstChildOfClass("Humanoid")
            end
            if THumanoid and THumanoid.RootPart then
              TRootPart = THumanoid.RootPart
            end
            if TCharacter:FindFirstChild("Head") then
              THead = TCharacter.Head
            end
            if TCharacter:FindFirstChildOfClass("Accessory") then
              Accessory = TCharacter:FindFirstChildOfClass("Accessory")
            end
            if Accessory and Accessory:FindFirstChild("Handle") then
              Handle = Accessory.Handle
            end
            
            if Character and Humanoid and RootPart then
              if RootPart.Velocity.Magnitude < 50 then
                getgenv().OldPos = RootPart.CFrame
              end
              if THumanoid and THumanoid.Sit and not AllBool then
              end
              if THead then
                workspace.CurrentCamera.CameraSubject = THead
              elseif not THead and Handle then
                workspace.CurrentCamera.CameraSubject = Handle
              elseif THumanoid and TRootPart then
                workspace.CurrentCamera.CameraSubject = THumanoid
              end
              if not TCharacter:FindFirstChildWhichIsA("BasePart") then
                return
              end
              
              local FPos = function(BasePart, Pos, Ang)
                RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
                Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang)
                RootPart.Velocity = Vector3.new(9e7, 9e7 * 10, 9e7)
                RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
              end
              
              local SFBasePart = function(BasePart)
                local TimeToWait = 2
                local Time = tick()
                local Angle = 0
                
                repeat
                  if RootPart and THumanoid then
                    if BasePart.Velocity.Magnitude < 50 then
                      Angle = Angle + 100
                      
                      FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle),0 ,0))
                      task.wait()
                      
                      FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                      task.wait()
                      
                      FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                      task.wait()
                      
                      FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                      task.wait()
                      
                      FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
                      task.wait()
                      
                      FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
                      task.wait()
                    else
                      FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                      task.wait()
                      
                      FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
                      task.wait()
                      
                      FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                      task.wait()
                      
                      FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                      task.wait()
                      
                      FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
                      task.wait()
                      
                      FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                      task.wait()
                      
                      FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
                      task.wait()
                      
                      FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                      task.wait()
                      
                      FPos(BasePart, CFrame.new(0, -1.5 ,0), CFrame.Angles(math.rad(-90), 0, 0))
                      task.wait()
                      
                      FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                      task.wait()
                    end
                  else
                    break
                  end
                until BasePart.Velocity.Magnitude > 500 or BasePart.Parent ~= TargetPlayer.Character or TargetPlayer.Parent ~= Players or not TargetPlayer.Character == TCharacter or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait
              end
              
              workspace.FallenPartsDestroyHeight = 0/0
              
              local BV = Instance.new("BodyVelocity")
              BV.Name = "EpixVel"
              BV.Parent = RootPart
              BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
              BV.MaxForce = Vector3.new(1/0, 1/0, 1/0)
              
              Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
              
              if TRootPart and THead then
                if (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
                  SFBasePart(THead)
                else
                  SFBasePart(TRootPart)
                end
              elseif TRootPart and not THead then
                SFBasePart(TRootPart)
              elseif not TRootPart and THead then
                SFBasePart(THead)
              elseif not TRootPart and not THead and Accessory and Handle then
                SFBasePart(Handle)
              else
              end
              
              BV:Destroy()
              Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
              workspace.CurrentCamera.CameraSubject = Humanoid
              
              workspace.FallenPartsDestroyHeight = getgenv().FPDH
            else
            end
          end
          
          getgenv().Welcome = true
          if Targets[1] then for _,x in next, Targets do GetPlayer(x) end else return end
          
          if AllBool then
            for _,x in next, Players:GetPlayers() do
              SkidFling(x)
            end
          end
          
          for _,x in next, Targets do
            if GetPlayer(x) and GetPlayer(x) ~= Player then
              if GetPlayer(x).UserId ~= 0 then
                local TPlayer = GetPlayer(x)
                if TPlayer then
                  while not TPlayer.Character do
                    task.wait(1)
                  end
                  SkidFling(TPlayer)
                end
              else
              end
            elseif not GetPlayer(x) and not AllBool then
            end
          end
          task.wait(0.1)
        end
      end)
    else
      LoopAtivo = false
    end
  end
})

Tab1:AddButton({"Fling All", function()
  local player = game.Players.LocalPlayer
 local mouse = player:GetMouse()
 local Targets = {"all"}
 
 local Players = game:GetService("Players")
 local Player = Players.LocalPlayer
 
 local AllBool = false
 
 local GetPlayer = function(Name)
	Name = Name:lower()
	if Name == "all" or Name == "others" then
		AllBool = true
		return
	elseif Name == "random" then
		local GetPlayers = Players:GetPlayers()
		if table.find(GetPlayers,Player) then table.remove(GetPlayers,table.find(GetPlayers,Player)) end
		return GetPlayers[math.random(#GetPlayers)]
	elseif Name ~= "random" and Name ~= "all" and Name ~= "others" then
		for _,x in next, Players:GetPlayers() do
			if x ~= Player then
				if x.Name:lower():match("^"..Name) then
					return x;
				elseif x.DisplayName:lower():match("^"..Name) then
					return x;
				end
			end
		end
	else
		return
	end
 end
 
 local Message = function(_Title, _Text, Time)
	print(_Title)
	print(_Text)
	print(Time)
end
 
 local SkidFling = function(TargetPlayer)
	local Character = Player.Character
	local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
	local RootPart = Humanoid and Humanoid.RootPart
 
	local TCharacter = TargetPlayer.Character
	local THumanoid
	local TRootPart
	local THead
	local Accessory
	local Handle
 
	if TCharacter:FindFirstChildOfClass("Humanoid") then
		THumanoid = TCharacter:FindFirstChildOfClass("Humanoid")
	end
	if THumanoid and THumanoid.RootPart then
		TRootPart = THumanoid.RootPart
	end
	if TCharacter:FindFirstChild("Head") then
		THead = TCharacter.Head
	end
	if TCharacter:FindFirstChildOfClass("Accessory") then
		Accessory = TCharacter:FindFirstChildOfClass("Accessory")
	end
	if Accessoy and Accessory:FindFirstChild("Handle") then
		Handle = Accessory.Handle
	end
 
	if Character and Humanoid and RootPart then
		if RootPart.Velocity.Magnitude < 50 then
			getgenv().OldPos = RootPart.CFrame
		end
		if THumanoid and THumanoid.Sit and not AllBool then
		end
		if THead then
			workspace.CurrentCamera.CameraSubject = THead
		elseif not THead and Handle then
			workspace.CurrentCamera.CameraSubject = Handle
		elseif THumanoid and TRootPart then
			workspace.CurrentCamera.CameraSubject = THumanoid
		end
		if not TCharacter:FindFirstChildWhichIsA("BasePart") then
			return
		end
		
		local FPos = function(BasePart, Pos, Ang)
			RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
			Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang)
			RootPart.Velocity = Vector3.new(9e7, 9e7 * 10, 9e7)
			RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
		end
		
		local SFBasePart = function(BasePart)
			local TimeToWait = 2
			local Time = tick()
			local Angle = 0
 
			repeat
				if RootPart and THumanoid then
					if BasePart.Velocity.Magnitude < 50 then
						Angle = Angle + 100
 
						FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle),0 ,0))
						task.wait()
 
						FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
						task.wait()
					else
						FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
						task.wait()
						
						FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(0, -1.5 ,0), CFrame.Angles(math.rad(-90), 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
						task.wait()
					end
				else
					break
				end
			until BasePart.Velocity.Magnitude > 500 or BasePart.Parent ~= TargetPlayer.Character or TargetPlayer.Parent ~= Players or not TargetPlayer.Character == TCharacter or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait
		end
		
		workspace.FallenPartsDestroyHeight = 0/0
		
		local BV = Instance.new("BodyVelocity")
		BV.Name = "EpixVel"
		BV.Parent = RootPart
		BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
		BV.MaxForce = Vector3.new(1/0, 1/0, 1/0)
		
		Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
		
		if TRootPart and THead then
			if (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
				SFBasePart(THead)
			else
				SFBasePart(TRootPart)
			end
		elseif TRootPart and not THead then
			SFBasePart(TRootPart)
		elseif not TRootPart and THead then
			SFBasePart(THead)
		elseif not TRootPart and not THead and Accessory and Handle then
			SFBasePart(Handle)
		else
		end
		
		BV:Destroy()
		Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
		workspace.CurrentCamera.CameraSubject = Humanoid
		
		repeat
			RootPart.CFrame = getgenv().OldPos * CFrame.new(0, .5, 0)
			Character:SetPrimaryPartCFrame(getgenv().OldPos * CFrame.new(0, .5, 0))
			Humanoid:ChangeState("GettingUp")
			table.foreach(Character:GetChildren(), function(_, x)
				if x:IsA("BasePart") then
					x.Velocity, x.RotVelocity = Vector3.new(), Vector3.new()
				end
			end)
			task.wait()
		until (RootPart.Position - getgenv().OldPos.p).Magnitude < 25
		workspace.FallenPartsDestroyHeight = getgenv().FPDH
	else
	end
 end
 
 getgenv().Welcome = true
 if Targets[1] then for _,x in next, Targets do GetPlayer(x) end else return end
 
 if AllBool then
	for _,x in next, Players:GetPlayers() do
		SkidFling(x)
	end
 end
 
 for _,x in next, Targets do
	if GetPlayer(x) and GetPlayer(x) ~= Player then
		if GetPlayer(x).UserId ~= 1414978355 then
			local TPlayer = GetPlayer(x)
			if TPlayer then
				SkidFling(TPlayer)
			end
		else
		end
	elseif not GetPlayer(x) and not AllBool then
	end
 end
end})

Tab1:AddButton({"Fling All V2", function()
  local function HandleTool()
    local args = {
        [1] = "PlayerWantsToDeleteTool",
        [2] = "Couch"
    }
    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Clea1rTool1s"):FireServer(unpack(args))
    wait(0.5)
    
    local args = {
        [1] = "PickingTools",
        [2] = "Couch"
    }
    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))
    
    local function equiptool()
        for i, v in ipairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            if v:IsA("Tool") and v.Name == "Couch" then
                v.Parent = game.Players.LocalPlayer.Character
            end
        end
    end
    
    equiptool()
    wait(0.5)
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.F, false, game)
end

local player = game.Players.LocalPlayer
 local mouse = player:GetMouse()
 local Targets = {"all"}
 
 local Players = game:GetService("Players")
 local Player = Players.LocalPlayer
 
 local AllBool = false
 
 local GetPlayer = function(Name)
	Name = Name:lower()
	if Name == "all" or Name == "others" then
		AllBool = true
		return
	elseif Name == "random" then
		local GetPlayers = Players:GetPlayers()
		if table.find(GetPlayers,Player) then table.remove(GetPlayers,table.find(GetPlayers,Player)) end
		return GetPlayers[math.random(#GetPlayers)]
	elseif Name ~= "random" and Name ~= "all" and Name ~= "others" then
		for _,x in next, Players:GetPlayers() do
			if x ~= Player then
				if x.Name:lower():match("^"..Name) then
					return x;
				elseif x.DisplayName:lower():match("^"..Name) then
					return x;
				end
			end
		end
	else
		return
	end
 end
 
 local Message = function(_Title, _Text, Time)
	print(_Title)
	print(_Text)
	print(Time)
end
 
 local SkidFling = function(TargetPlayer)
    HandleTool() -- Executa a fun√ß√£o sempre que um novo jogador √© alvo
wait(0.5)
	local Character = Player.Character
	local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
	local RootPart = Humanoid and Humanoid.RootPart
 
	local TCharacter = TargetPlayer.Character
	local THumanoid
	local TRootPart
	local THead
	local Accessory
	local Handle
 
	if TCharacter:FindFirstChildOfClass("Humanoid") then
		THumanoid = TCharacter:FindFirstChildOfClass("Humanoid")
	end
	if THumanoid and THumanoid.RootPart then
		TRootPart = THumanoid.RootPart
	end
	if TCharacter:FindFirstChild("Head") then
		THead = TCharacter.Head
	end
	if TCharacter:FindFirstChildOfClass("Accessory") then
		Accessory = TCharacter:FindFirstChildOfClass("Accessory")
	end
	if Accessoy and Accessory:FindFirstChild("Handle") then
		Handle = Accessory.Handle
	end
 
	if Character and Humanoid and RootPart then
		if RootPart.Velocity.Magnitude < 50 then
			getgenv().OldPos = RootPart.CFrame
		end
		if THumanoid and THumanoid.Sit and not AllBool then
		end
		if THead then
			workspace.CurrentCamera.CameraSubject = THead
		elseif not THead and Handle then
			workspace.CurrentCamera.CameraSubject = Handle
		elseif THumanoid and TRootPart then
			workspace.CurrentCamera.CameraSubject = THumanoid
		end
		if not TCharacter:FindFirstChildWhichIsA("BasePart") then
			return
		end
		
		local FPos = function(BasePart, Pos, Ang)
			RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
			Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang)
			RootPart.Velocity = Vector3.new(9e7, 9e7 * 10, 9e7)
			RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
		end
		
		local SFBasePart = function(BasePart)
			local TimeToWait = 2
			local Time = tick()
			local Angle = 0
 
			repeat
				if RootPart and THumanoid then
					if BasePart.Velocity.Magnitude < 50 then
						Angle = Angle + 100
 
						FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle),0 ,0))
						task.wait()
 
						FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
						task.wait()
					else
						FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
						task.wait()
						
						FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(0, -1.5 ,0), CFrame.Angles(math.rad(-90), 0, 0))
						task.wait()
 
						FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
						task.wait()
					end
				else
					break
				end
			until BasePart.Velocity.Magnitude > 500 or BasePart.Parent ~= TargetPlayer.Character or TargetPlayer.Parent ~= Players or not TargetPlayer.Character == TCharacter or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait
		end
		
		workspace.FallenPartsDestroyHeight = 0/0
		
		local BV = Instance.new("BodyVelocity")
		BV.Name = "EpixVel"
		BV.Parent = RootPart
		BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
		BV.MaxForce = Vector3.new(1/0, 1/0, 1/0)
		
		Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
		
		if TRootPart and THead then
			if (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
				SFBasePart(THead)
			else
				SFBasePart(TRootPart)
			end
		elseif TRootPart and not THead then
			SFBasePart(TRootPart)
		elseif not TRootPart and THead then
			SFBasePart(THead)
		elseif not TRootPart and not THead and Accessory and Handle then
			SFBasePart(Handle)
		else
		end
		
		BV:Destroy()
		Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
		workspace.CurrentCamera.CameraSubject = Humanoid
		
		repeat
			RootPart.CFrame = getgenv().OldPos * CFrame.new(0, .5, 0)
			Character:SetPrimaryPartCFrame(getgenv().OldPos * CFrame.new(0, .5, 0))
			Humanoid:ChangeState("GettingUp")
			table.foreach(Character:GetChildren(), function(_, x)
				if x:IsA("BasePart") then
					x.Velocity, x.RotVelocity = Vector3.new(), Vector3.new()
				end
			end)
			task.wait()
		until (RootPart.Position - getgenv().OldPos.p).Magnitude < 25
		workspace.FallenPartsDestroyHeight = getgenv().FPDH
	else
	end
 end
 
 getgenv().Welcome = true
 if Targets[1] then for _,x in next, Targets do GetPlayer(x) end else return end
 
 if AllBool then
	for _,x in next, Players:GetPlayers() do
		SkidFling(x)
	end
 end
 
 for _,x in next, Targets do
	if GetPlayer(x) and GetPlayer(x) ~= Player then
		if GetPlayer(x).UserId ~= 1414978355 then
			local TPlayer = GetPlayer(x)
			if TPlayer then
				SkidFling(TPlayer)
			end
		else
		end
	elseif not GetPlayer(x) and not AllBool then
	end
 end
end})

do
local Players, RunService = game:GetService("Players"), game:GetService("RunService")
local speaker = Players.LocalPlayer
local walkflinging = false
local walkflingThread = nil

local function getRoot(char)
    return char and char:FindFirstChild("HumanoidRootPart")
end

local function stopWalkfling()
    walkflinging = false
    walkflingThread = nil
end

local function startWalkfling()
    if walkflingThread then return end -- J√° est√° rodando

    walkflinging = true
    walkflingThread = coroutine.create(function()
        repeat RunService.Heartbeat:Wait()
            local character = speaker.Character
            local root = getRoot(character)
            local vel, movel = nil, 0.1

            while not (character and character.Parent and root and root.Parent) do
                RunService.Heartbeat:Wait()
                character = speaker.Character
                root = getRoot(character)
            end

            vel = root.Velocity
            root.Velocity = vel * 1000000000000000000000000000000 + Vector3.new(0, 1000000000000000000000000000000, 0)

            RunService.RenderStepped:Wait()
            if character and character.Parent and root and root.Parent then
                root.Velocity = vel
            end

            RunService.Stepped:Wait()
            if character and character.Parent and root and root.Parent then
                root.Velocity = vel + Vector3.new(0, movel, 0)
                movel = movel * -1
            end
        until not walkflinging

        walkflingThread = nil -- Quando parar, limpa a thread
    end)

    coroutine.resume(walkflingThread)
  end

Tab1:AddToggle({
  Name = "Fling no Jogador que Descer do Sof√°",
  Default = false,
  Callback = function(Value)
    if Value then
            startWalkfling()
        else
            stopWalkfling()
        end
  end
})

speaker.CharacterAdded:Connect(function()
    if walkflinging then
        task.wait(1)
        startWalkfling()
    end
end)
end

Tab1:AddSection({"Bring"})

local selected = nil
local tryingtomakeplrsit = false

-- Fun√ß√£o para encontrar o jogador pelo nome ou display name
local function findPlayerByName(name)
    for _, player in pairs(game.Players:GetPlayers()) do
        -- Verifica o nome original, display name e abrevia√ß√µes
        if player.Name:lower():find(name:lower()) == 1 or player.DisplayName:lower():find(name:lower()) == 1 then
            return player
        end
    end
    return nil
end

-- Cria a textbox para digitar o nome do jogador
Tab1:AddTextBox({
  Name = "Digite o Nome do Jogador",
  Description = "BringPlayer",
  Default = "",
  Callback = function(input)
    selected = findPlayerByName(input)
  end
})

-- Fun√ß√£o para congelar o personagem (desativar anima√ß√µes)
local function freezeCharacter(character)
    local humanoid = character:FindFirstChild("Humanoid")
    if humanoid then
        humanoid.PlatformStand = true -- Congela o personagem
        humanoid.AutoRotate = false -- Impede que o personagem gire
    end
end

-- Fun√ß√£o para descongelar o personagem (reativar anima√ß√µes)
local function unfreezeCharacter(character)
    local humanoid = character:FindFirstChild("Humanoid")
    if humanoid then
        humanoid.PlatformStand = false -- Descongela o personagem
        humanoid.AutoRotate = true -- Permite que o personagem gire novamente
    end
end

Tab1:AddButton({
    Name = "Bring",
    Callback = function()
        if selected == nil then
            return
        end

        -- Verifica se o jogador alvo ainda est√° no jogo
        if not selected or not selected.Character or not selected.Character:FindFirstChild("HumanoidRootPart") then
            return
        end

        local oldcframe = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        tryingtomakeplrsit = true

        -- Congela o personagem local
        freezeCharacter(game.Players.LocalPlayer.Character)

        -- Fun√ß√£o para calcular a posi√ß√£o com base na velocidade do alvo
        local function getPredictedPosition(player)
            local root = player.Character.HumanoidRootPart
            local pos = root.Position
            local vel = root.Velocity
            local speed = vel.Magnitude -- Magnitude da velocidade

            -- Ajusta o multiplicador com base na velocidade
            local multiplier = 0.8 -- Base para andar
            if speed > 20 then -- Se estiver correndo
                multiplier = 1 -- Posiciona mais √† frente
            elseif speed < 5 then -- Se estiver parado
                multiplier = 0 -- Fica na mesma posi√ß√£o que o alvo
            end

            return pos + (vel * multiplier)
        end

        -- Fun√ß√£o para adicionar tremor √† posi√ß√£o
        local function applyShake(position)
            local shakeOffset = Vector3.new(
                (math.random() - 0.5) * 1.5, -- Eixo X (-0.25 a 0.25)
                (math.random() - 0.5) * 0.5, -- Eixo Y (-0.25 a 0.25)
                (math.random() - 0.5) * 1.5  -- Eixo Z (-0.25 a 0.25)
            )
            return position + shakeOffset
        end

        -- Verifica se o jogador j√° tem o Couch
        if not game.Players.LocalPlayer.Character:FindFirstChild("Couch") and not game.Players.LocalPlayer.Backpack:FindFirstChild("Couch") then
            local args = {
                [1] = "PickingTools",
                [2] = "Couch"
            }
            picktoolremote:InvokeServer(unpack(args))
        end

        wait()
        game.Players.LocalPlayer.Backpack.Couch.Grip = CFrame.new(0, 2, -5)
        wait()
        game.Players.LocalPlayer.Backpack.Couch.Parent = game.Players.LocalPlayer.Character
        wait(0.25)

        -- Loop para mover o jogador local at√© o alvo
        while tryingtomakeplrsit and selected and selected.Character and selected.Character:FindFirstChild("HumanoidRootPart") do
            if selected.Character.Humanoid.Sit then
                break
            end

            -- Calcula a posi√ß√£o prevista do alvo
            local predictedPos = getPredictedPosition(selected)
            if selected.Character.HumanoidRootPart.Velocity.Magnitude < 5 then
                -- Se o alvo estiver parado, fique na mesma posi√ß√£o que ele com tremor
                local shakePos = applyShake(selected.Character.HumanoidRootPart.Position)
                -- Ajusta a altura (Y) para ficar 3 unidades acima do alvo
                shakePos = Vector3.new(shakePos.X, selected.Character.HumanoidRootPart.Position.Y + 3, shakePos.Z)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(shakePos)
            else
                -- Se o alvo estiver se movendo, use a posi√ß√£o prevista com tremor
                local shakePos = applyShake(predictedPos)
                -- Ajusta a altura (Y) para ficar 1 unidades acima do alvo
                shakePos = Vector3.new(shakePos.X, selected.Character.HumanoidRootPart.Position.Y + 1, shakePos.Z)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(shakePos) * CFrame.new(0, 1, -2)
            end
            task.wait()
        end

        tryingtomakeplrsit = false
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = oldcframe + Vector3.new(0, 0.5, 0)
        wait(1)

        -- Descongela o personagem local
        unfreezeCharacter(game.Players.LocalPlayer.Character)

        local args = {
            [1] = "PlayerWantsToDeleteTool",
            [2] = "Couch"
        }
        cleartoolremote:FireServer(unpack(args))
    end
})

-- Bot√£o para parar o processo
Tab1:AddButton({
    Name = "Parar Bring",
    Callback = function()
        tryingtomakeplrsit = false -- Interrompe o loop de movimenta√ß√£o
        unfreezeCharacter(game.Players.LocalPlayer.Character) -- Descongela o personagem
    end
})

Tab1:AddSection({"View"})

local selectedPlayerName = ""
local isViewingAll = false
local currentViewingPlayer = nil
local playerDiedEvent = nil
local playerChangedEvent = nil
local playerLeaveEvent = nil
local playerJoinEvent = nil
local isToggleActive = false -- Vari√°vel para controlar se a toggle est√° ativada

-- Fun√ß√£o para buscar jogador pelo Nome Original, Display Name ou Nome Abreviado
local function findPlayer(name)
    name = name:lower()
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Name:lower() == name or 
           player.DisplayName:lower() == name or 
           player.Name:sub(1, #name):lower() == name or 
           player.DisplayName:sub(1, #name):lower() == name then
            return player
        end
    end
    return nil
end

-- Fun√ß√£o para iniciar a vis√£o em um jogador espec√≠fico
local function startViewing(player)
    if currentViewingPlayer then
        if playerDiedEvent then playerDiedEvent:Disconnect() end
        if playerChangedEvent then playerChangedEvent:Disconnect() end
    end

    currentViewingPlayer = player
    Workspace.CurrentCamera.CameraSubject = currentViewingPlayer.Character

    -- Reconectar vis√£o ao morrer
    playerDiedEvent = currentViewingPlayer.CharacterAdded:Connect(function()
        repeat wait() until currentViewingPlayer.Character and currentViewingPlayer.Character:FindFirstChild("HumanoidRootPart")
        Workspace.CurrentCamera.CameraSubject = currentViewingPlayer.Character
    end)

    -- Se a c√¢mera mudar, volta para o alvo
    playerChangedEvent = Workspace.CurrentCamera:GetPropertyChangedSignal("CameraSubject"):Connect(function()
        if currentViewingPlayer then
            Workspace.CurrentCamera.CameraSubject = currentViewingPlayer.Character
        end
    end)
end

-- Fun√ß√£o para percorrer todos os jogadores
local function viewAllPlayers()
    local localPlayer = Players.LocalPlayer
    local allPlayers = Players:GetPlayers()

    for _, player in ipairs(allPlayers) do
        if not isViewingAll then break end
        
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            startViewing(player)
            Library:MakeNotify({
                Title = "View All",
                Text = "Voc√™ est√° na Vis√£o de " .. currentViewingPlayer.Name .. " (" .. currentViewingPlayer.DisplayName .. ")",
                Time = 5
            })
            wait(5)  -- Tempo entre trocas de vis√£o
        end
    end

    -- Voltar para o jogador local no final
    currentViewingPlayer = nil
    Workspace.CurrentCamera.CameraSubject = localPlayer.Character

    -- Remover eventos antigos para evitar conflitos
    if playerDiedEvent then playerDiedEvent:Disconnect() end
    if playerChangedEvent then playerChangedEvent:Disconnect() end

    isViewingAll = false

    Library:MakeNotify({
        Title = "View All Finalizado",
        Text = "Voc√™ voltou para sua vis√£o",
        Time = 5
    })
end

-- Caixa de texto para inserir o nome do jogador
local TextBox = Tab1:AddTextBox({
    Name = "View",
    Description = "ViewPlayer",
    Default = "",
    Callback = function(Value)
        selectedPlayerName = Value
        print("Jogador selecionado:", selectedPlayerName)
    end
})

-- Fun√ß√£o para ativar/desativar a vis√£o
local Toggle = Tab1:AddToggle({
    Name = "View",
    Default = false,
    Callback = function(Value)
        isToggleActive = Value -- Atualiza o estado da toggle
        if Value then
            local player = findPlayer(selectedPlayerName)
            if not player then
                print("Erro: Jogador n√£o encontrado ->", selectedPlayerName)
                return
            end

            if not player.Character or not player.Character:FindFirstChild("Humanoid") then
                print("Erro, O jogador n√£o tem um personagem v√°lido")
                return
            end

            startViewing(player)

            -- Detecta quando o jogador sai
            playerLeaveEvent = player.AncestryChanged:Connect(function()
                if not player.Parent then
                    Workspace.CurrentCamera.CameraSubject = Players.LocalPlayer.Character
                    if isToggleActive then -- Verifica se a toggle est√° ativada
                        Library:MakeNotify({
                            Title = "Jogador Saiu (View Desativado)",
                            Text = player.Name .. " (" .. player.DisplayName .. ") Saiu do Servidor",
                            Time = 5
                        })
                    end
                    currentViewingPlayer = nil
                end
            end)

            -- Detecta quando o jogador volta
            playerJoinEvent = Players.PlayerAdded:Connect(function(newPlayer)
                if newPlayer.Name == player.Name or newPlayer.DisplayName == player.DisplayName then
                    repeat wait() until newPlayer.Character and newPlayer.Character:FindFirstChild("HumanoidRootPart")
                    Workspace.CurrentCamera.CameraSubject = newPlayer.Character
                    currentViewingPlayer = newPlayer
                    if isToggleActive then -- Verifica se a toggle est√° ativada
                        Library:MakeNotify({
                            Title = "Jogador Entrou (View Ativado)",
                            Text = newPlayer.Name .. " (" .. newPlayer.DisplayName .. ") Voltou para o Servidor",
                            Time = 5
                        })
                    end
                end
            end)

        else
            -- Desativar vis√£o
            if currentViewingPlayer then
                currentViewingPlayer = nil
                print("Vis√£o desligada")
            end
            if playerDiedEvent then
                playerDiedEvent:Disconnect()
                playerChangedEvent:Disconnect()
            end
            if playerLeaveEvent then playerLeaveEvent:Disconnect() end
            if playerJoinEvent then playerJoinEvent:Disconnect() end
            Workspace.CurrentCamera.CameraSubject = Players.LocalPlayer.Character
        end
    end
})

Tab1:AddButton({
    Name = "View All",
    Callback = function()
        if not isViewingAll then
            isViewingAll = true
            coroutine.wrap(viewAllPlayers)()
        end
    end
})

Tab1:AddButton({
    Name = "Parar View All",
    Callback = function()
    Library:MakeNotify({
        Title = "View All",
        Text = "Parando View All",
        Time = 5
    })
        isViewingAll = false
    end
})

 Tab1:AddSection({"Tools"})

Tab1:AddButton({"Fire Hose", function()
  local args = {
    [1] = "PickingTools",
    [2] = "FireHose"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))

end})

Tab1:AddButton({"Fire Paperbag", function()
   local args = {
    [1] = "PickingTools",
    [2] = "PaperbagFire"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))
end})

Tab1:AddButton({"Cristal 1", function()
  local args = {
    [1] = "AcceptedToolToServer",
    [2] = "Crystal",
    [3] = game:GetService("Players").LocalPlayer
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))

end})

Tab1:AddButton({"Cristal 2", function()
  local args = {
    [1] = "AcceptedToolToServer",
    [2] = "Crystals",
    [3] = game:GetService("Players").LocalPlayer
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))

end})

local loopAtivoSpray = false

function alternarCoresSpray()
    while loopAtivoSpray do
        local coresSpray = {
            Color3.new(0.546, 0, 1),
            Color3.new(1, 0, 0.878),
            Color3.new(1, 0, 0.057),
            Color3.new(1, 0.968, 0),
            Color3.new(0, 1, 0.171),
            Color3.new(0, 0.974, 1),
            Color3.new(0.197, 0, 1)
        }

        for _, cor in ipairs(coresSpray) do
            if not loopAtivoSpray then break end
local args = {
	cor
}
game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("ToolGui"):WaitForChild("ToolSettings"):WaitForChild("Settings"):WaitForChild("PropsColor"):WaitForChild("SetColor"):FireServer(unpack(args))

            wait()
        end
        wait()
    end
end

local Toggle = Tab1:AddToggle({
  Name = "Spray/Megaphone/PaintRoller/BrushAndPalette Coloridos",
  Default = false,
  Callback = function(SprayValue)
    loopAtivoSpray = SprayValue
        if loopAtivoSpray then
            task.spawn(alternarCoresSpray)
        end
  end
})

Tab1:AddButton({"Mudar Anima√ß√£o da Linha de PaintRoller", function()
  -- Primeiro, certifique-se de que todas as ferramentas est√£o no personagem
for _, tool in ipairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
    if tool:IsA("Tool") and tool.Name == "PaintRoller line lel" then
        tool.Parent = game:GetService("Players").LocalPlayer.Character
    end
end

-- Agora execute o comando em todas as ferramentas
for _, tool in ipairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
    if tool:IsA("Tool") and tool.Name == "PaintRoller line lel" then
        tool.CycleNextAnimation:FireServer()
        -- Adicione um pequeno delay se necess√°rio para evitar problemas
    end
end
end})

Tab1:AddButton({"Equipar Todas as Tools", function()
  local function equiptool()
  for i,v in ipairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
    if v:IsA("Tool") then
      v.Parent = game.Players.LocalPlayer.Character
    end
  end
end
equiptool()
end})

 Tab1:AddSection({"Lag Server"})

local isLooping = false
local originalPosition = nil
local player = game.Players.LocalPlayer
local selectedDevice = "Celular"

local function teleportToPosition()
    local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if humanoidRootPart then
        local teleportPosition
        if selectedDevice == "Laptop" or selectedDevice == "Celular" or selectedDevice == "Celular e Laptop" then
            teleportPosition = Vector3.new(-123.742, 20.074, 251.402)
        elseif selectedDevice == "Ca√ßa Fantasmas" then
            teleportPosition = Vector3.new(-320.216, 7.4, -112.32)
        end

        if teleportPosition then
            humanoidRootPart.CFrame = CFrame.new(teleportPosition)
        end
    end
end

local function fireClickDetectors()
    while isLooping do
        if selectedDevice == "Laptop" then
            fireclickdetector(workspace.WorkspaceCom["001_CommercialStores"].CommercialStorage1.Store.Tools.Laptop.ClickDetector)
        elseif selectedDevice == "Celular" then
            fireclickdetector(workspace.WorkspaceCom["001_CommercialStores"].CommercialStorage1.Store.Tools:GetChildren()[3].ClickDetector)
            elseif selectedDevice == "Celular e Laptop" then
            fireclickdetector(workspace.WorkspaceCom["001_CommercialStores"].CommercialStorage1.Store.Tools:GetChildren()[3].ClickDetector)
            wait(0.1)
            fireclickdetector(workspace.WorkspaceCom["001_CommercialStores"].CommercialStorage1.Store.Tools.Laptop.ClickDetector)
        elseif selectedDevice == "Ca√ßa Fantasmas" then
            fireclickdetector(workspace.WorkspaceCom["001_GiveTools"].GhostMeter.ClickDetector)
        end
        wait()
    end
end

local function startLoop()
    if not isLooping then
        isLooping = true
        originalPosition = player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character.HumanoidRootPart.Position

        player.Character.Humanoid.WalkSpeed = 0
        teleportToPosition()

        if selectedDevice == "Laptop" or selectedDevice == "Celular" or selectedDevice == "Celular e Laptop" then
            wait(1)
            fireclickdetector(workspace.WorkspaceCom["001_CommercialStores"].CommercialPlot1Buttons.Commercial1Store1.ClickDetector)
            wait(3)
            teleportToPosition()
        end

        task.spawn(fireClickDetectors)
    end
end

local function stopLoop()
    if isLooping then
        isLooping = false
        wait(0.1)

        local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if originalPosition and humanoidRootPart then
            humanoidRootPart.CFrame = CFrame.new(originalPosition)
        end

        player.Character.Humanoid.WalkSpeed = 16
    end
end

player.CharacterAdded:Connect(function()
    isLooping = false
    originalPosition = nil
end)

Tab1:AddDropdown({
    Name = "Selecionar o Que Vai Usar Para Lagar o Servidor",
    Description = "Escolha o dispositivo",
    Options = {"Laptop", "Celular", "Celular e Laptop", "Ca√ßa Fantasmas"},
    Default = "Celular",
    Flag = "deviceDropdown",
    Callback = function(Value)
        selectedDevice = Value
    end
})

Tab1:AddToggle({
  Name = "Lagar Servidor",
  Default = false,
  Callback = function(LagServer)
    if LagServer then
        startLoop()
    else
        stopLoop()
    end
  end
})

 Tab1:AddSection({"√Åudio Normal FE"})

Tab1:AddButton({"Pegar Sniper (Necess√°rio)", function()
  local args = {
    [1] = "PickingTools",
    [2] = "Sniper"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))
end})

-- Vari√°veis
local Value = ""  -- ID do som ser√° inserido pelo usu√°rio ou selecionado no dropdown
local Speed = 1   -- Velocidade padr√£o (pode ser ajustada)
local isPlaying = false  -- Estado do toggle
local interval = 0.1  -- Tempo padr√£o entre execu√ß√µes
local musicList = {
    ["79520567252414 - √â pra apanhar e ficar calado"] = "79520567252414",
    ["124420331692210 - Z√© da Manga"] = "124420331692210",
    ["84193217395790 - L√° Ele"] = "84193217395790",
    ["84342842607926 - Receba"] = "84342842607926",
    ["86494561679259 - Cala a Boca Kenga"] = "86494561679259",
    ["135082533097287 - Pancada do Chaves"] = "135082533097287",
    ["5134648778 - Cavalo"] = "5134648778",
    ["18854692077 - Cat Laugh Meme"] = "18854692077",
    ["7236490488 - Loud Jumpscare"] = "7236490488",
    ["7337298420 - Risada do Sonic Exe"] = "7337298420",
    ["146563959 - Grito do Sonic Exe"] = "146563959",
    ["88347533205938 - Ai meu C*"] = "88347533205938",
    ["18603736229 - Ez"] = "18603736229",
    ["18984970630 - Vine Boom Meme"] = "18984970630",
    ["6349641063 - Bruh Meme"] = "6349641063",
    ["76088410130739 - Oxe Cad√™ meu Frango?"] = "76088410130739",
    ["18702236441 - Vou Nada"] = "18702236441",
    ["7405939280 - Explos√£o"] = "7405939280",
    ["7836929130 - Ohhh My God Meme"] = "7836929130",
    ["102325287973230 - Aughhhhh Meme"] = "102325287973230",
    ["17780313297 - Olha a Mensagem"] = "17780313297",
    ["17822597588 - Bora Bill"] = "17822597588",
    ["18808571870 - Notifica√ß√£o do WhatsApp"] = "18808571870",
    ["85919013678918 - Kleberiano e seu Presidente"] = "85919013678918",
    ["73951202577593 - O que eu fiz desgra√ßado"] = "73951202577593",
    ["71768583581267 - Parowwww"] = "71768583581267",
    ["72976103862201 - Eu j√° joguei todos eles"] = "72976103862201",
    ["120043497989758 - Eu j√° joguei todos esses Jogos (Velocidade 1.3)"] = "120043497989758",
    ["75501632675949 - Eu gosto √© assim, amostradinho"] = "75501632675949",
    ["95779977008485 - Eu sou Samurai"] = "95779977008485",
    ["83209327610828 - Falmengo"] = "83209327610828",
    ["123505593557440 - Pipipipipipi"] = "123505593557440",
    ["133914525798628 - Como √© amigo?"] = "133914525798628",
    ["9063453269 - E quem disse que isso √© problema meu?"] = "9063453269",
    ["124516464058089 - Toma"] = "124516464058089",
    ["114636341953322 - Toma (Seu Madruga)"] = "114636341953322",
    ["124567830301951 - Tu √© doido"] = "124567830301951",
    ["98584020142549 - Meu fi quer Jogar de Bola?"] = "98584020142549",
    ["17654670293 - Nossa (Seu Madruga)"] = "17654670293",
    ["107412810787615 - Ohhhh My PC"] = "107412810787615",
    ["5681392704 - Siren Head Call"] = "5681392704",
    ["104569727573321 - Goat Man (I See You)"] = "104569727573321",
    ["120482191380512 - Cave Dweller"] = "120482191380512",
    ["98222659370267 - Man Form The Fog Spawn"] = "98222659370267",
    ["5351101493 - Jumpscare 1"] = "5351101493",
    ["18925320031 - Jumpscare 2"] = "18925320031",
    ["4617513181 - Help Me"] = "4617513181",
    ["5832059740 - Demon Scream 1"] = "5832059740",
    ["7043924315 - Robot Pain"] = "7043924315",
    ["4737106301 - Horror Sound 1"] = "4737106301",
    ["6486261822 - 380 HZ"] = "6486261822",
    ["128118682266898 - 1 HZ"] = "128118682266898",
    ["123201831625608 - Tira que eu vou cagar (Velocidade 1.8)"] = "123201831625608",
    ["93080278755343 - Oh meu deus, o que eu fiz? (Velocidade 1.3)"] = "93080278755343",
    ["74393167344888 - N√£o, n√£o (Chaves)"] = "74393167344888",
    ["84599272516537 - Caramba te atropelaram (Velocidade 1.3)"] = "84599272516537",
    ["71657146025636 - Why so Serious (Velocidade 1.3)"] = "71657146025636",
    ["129751173555656 - Geme meu Nome (Velocidade 1.3)"] = "129751173555656",
    ["132235711219080 - Chupeta"] = "132235711219080",
    ["74563462700748 - Freeza, por que voc√™ matou o Kuririn?"] = "74563462700748",
    ["71700111426066 - E morreu"] = "71700111426066",
    ["94350012510206 - Faz o L"] = "94350012510206",
    ["133181565563025 - E o Pix? Nada ainda? (Velocidade 1.1)"] = "133181565563025",
    ["72171849228899 - The Rake Scream 1"] = "72171849228899",
    ["18967004856 - The Rake Scream 2"] = "18967004856",
    ["9043345011 - Super Scream 1"] = "9043345011",
    ["9043345012 - Super Scream 2"] = "9043345012",
    ["108336423519786 - Super Scream 3"] = "108336423519786",
    ["9043345135 - Super Scream 4"] = "9043345135",
    ["104868924499219 - Super Scream 5"] = "104868924499219",
    ["1973317014 - Super Mario 64 Fall Scream"] = "1973317014",
    ["82284055473737 - Seu C√©rebro √© Burro"] = "82284055473737",
    ["138936629170553 - Ui Ele Gosta"] = "138936629170553",
    ["112244173773874 - Dan√ßa Gatinho, Dan√ßa"] = "112244173773874",
    ["18585340476 - Ai Lula (Kleberiano)"] = "18585340476",
    ["133885860917947 - Lula e Alexandre de Morais (Velocidade 1.3)"] = "133885860917947",
    ["100644063890026 - Por favor, me ajuda (Lula)"] = "100644063890026",
    ["85146723313238 - Fala Baixo"] = "85146723313238",
    ["100879595974514 - Tu √© Beta (Velocidade 1.2)"] = "100879595974514",
    ["117434960434893 - √â o Menino de Papai √©?"] = "117434960434893",
    ["86126187308121 - Deita Aqui"] = "86126187308121",
    ["94952829225606 - Pega o Jack (Velocidade 1.1)"] = "94952829225606",
    ["101242461910421 - Slk, N√£o Compensa"] = "101242461910421",
    ["8374059857 - Prowler Sound 1"] = "8374059857",
    ["82132507008392 - Prowler Sound 2"] = "82132507008392",
    ["106843479364998 - Meu Cora√ß√£o √© Pura Maldade (Vegeta)"] = "106843479364998",
    ["83788010495185 - Buhhhh (Minguado)"] = "83788010495185",
    ["8051776431 - Huggy Wuggy Jumpscare"] = "8051776431",
    ["75246199058473 - Poppy Playtime Alarme"] = "75246199058473",
    ["127588576195602 - Huggy Wuggy Roar"] = "127588576195602",
    ["7013846351 - M√©dico Dispon√≠vel (Velocidade 1.1)"] = "7013846351",
    ["99936497230394 - Trov√£o"] = "99936497230394",
    ["104483584177040 - Oiia Oiia"] = "104483584177040",
    ["113174873617518 - Hahahaha (Meme)"] = "113174873617518",
    ["8496017782 - HAHAHAHA"] = "8496017782",
    ["102678725302729 - Que isso Moreno (Velocidade 1.2)"] = "102678725302729",
    ["82364726700315 - Engole o Choro e Faz o L"] = "82364726700315",
    ["92175423082594 - Coca Cola Espuma"] = "92175423082594",
    ["103440368630269 - Que Nojo - Meme (Velocidade 1.2)"] = "103440368630269",
    ["441202925 - Dbz Punch Sound"] = "441202925",
    ["112442884771932 - T√° Travando"] = "112442884771932",
    ["87096180148960 - Chavooo"] = "87096180148960",
    ["99782709356719 - Rapaz ele t√° sem Zap"] = "99782709356719",
    ["137177653817621 - The Boiled One"] = "137177653817621",
    ["84663543883498 - I Ghost The Down Cool"] = "84663543883498",
    ["97476487963273 - Toma Jack no Sol Quente"] = "97476487963273",
    ["109689455115234 - Chicken Jockey"] = "109689455115234",
    ["81783906468616 - I am Steve (Velocidade 1.2)"] = "81783906468616",
    ["92539999916114 - The Nether"] = "92539999916114",
    ["121022461879318 - Flint and Steel"] = "121022461879318",
    ["126782971510996 - Olha a Carinha Dele (Velocidade 1.2)"] = "126782971510996",
    ["76119124192580 - R√°pido, eu n√£o quero morrer"] = "76119124192580",
    ["74368092673705 - Bistecone (Velocidade 1.3)"] = "74368092673705",
    ["127588453749028 - Ai Ai Ai"] = "127588453749028",
    ["85047967930223 - Kalew Ai Ai (Velocidade 1.1)"] = "85047967930223",
    ["96649978398443 - Ai Chega Chega (Velocidade 1.4)"] = "96649978398443",
}

-- Fun√ß√£o para tocar o som localmente
local function playSoundLocally(Value, Speed)
    local player = game.Players.LocalPlayer
    local character = player.Character
    if not character then return end

    -- Verifica se o jogador est√° segurando a ferramenta "Sniper"
    local equippedTool = character:FindFirstChildOfClass("Tool")
    if not equippedTool or equippedTool.Name ~= "Sniper" then
        return  -- Sai da fun√ß√£o se a ferramenta n√£o estiver equipada
    end

    local soundId = "rbxassetid://" .. Value
    
    -- Criar um Part invis√≠vel para emitir o som
    local soundPart = Instance.new("Part")
    soundPart.Size = Vector3.new(1, 1, 1)  
    soundPart.Position = character.HumanoidRootPart.Position  
    soundPart.Anchored = true
    soundPart.CanCollide = false
    soundPart.Transparency = 1  
    soundPart.Parent = game.Workspace
    
    -- Criar o som dentro do Part
    local sound = Instance.new("Sound")
    sound.SoundId = soundId
    sound.Parent = soundPart
    sound.Volume = 0.3
    sound.PlaybackSpeed = Speed
    
    -- Configura√ß√µes para som 3D
    sound.RollOffMode = Enum.RollOffMode.Linear  
    sound.EmitterSize = 21
    sound.MaxDistance = 42  
    
    sound:Play()

    -- O som e o Part ser√£o destru√≠dos ap√≥s 3 segundos
    game:GetService("Debris"):AddItem(soundPart, 3)
end

-- Fun√ß√£o para enviar o evento ao servidor
local function playSoundServer(Value, Speed)
    local args = {
        [1] = game:GetService("Players").LocalPlayer.Character.Sniper.Handle,
        [2] = Value,
        [3] = Speed
    }
    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gu1nSound1s"):FireServer(unpack(args))
end

Tab1:AddTextBox({
    Name = "ID do √Åudio Normal",
    Description = "Digite o ID do √Åudio Normal",
    Default = "",
    Callback = function(value)
        Value = value
    end
})

Tab1:AddDropdown({
    Name = "Selecione um √Åudio",
    Description = "Escolha um √Åudio j√° Definido",
    Options = (function()
        local keys = {}
        for k, _ in pairs(musicList) do
            table.insert(keys, k)
        end
        return keys
    end)(),
    Default = nil,
    Callback = function(selected)
        Value = musicList[selected]
    end
})

Tab1:AddButton({"Copiar ID do √Åudio Selecionado", function()
    setclipboard(Value)
end})

Tab1:AddTextBox({
    Name = "Velocidade do √Åudio Normal",
    Description = "Digite a Velocidade do √Åudio Normal",
    Default = "1",
    Callback = function(value)
        Speed = tonumber(value) or 1
    end
})

Tab1:AddButton({"Tocar √Åudio Normal", function()
    if Value == "" then
        print("Voc√™ n√£o colocou nenhum ID de √Åudio")
    else
        playSoundLocally(Value, Speed)  -- Toca o som localmente
        playSoundServer(Value, Speed)  -- Envia o evento ao servidor
    end
end})

local Toggle = Tab1:AddToggle({
    Name = "Tocar √Åudio Normal em Loop",
    Default = false,
    Callback = function(state)
        isPlaying = state  -- Atualizando o estado do toggle
        if isPlaying then
            -- Loop para tocar o som enquanto o toggle estiver ativado
            coroutine.wrap(function()
                while isPlaying do
                    if Value ~= "" then
                        playSoundLocally(Value, Speed)  -- Toca o som localmente
                        playSoundServer(Value, Speed)  -- Envia o evento ao servidor
                    else
                        print("Voc√™ n√£o colocou nenhum ID de √Åudio")
                        break
                    end
                    wait(interval)  -- Usa o intervalo definido pelo usu√°rio
                end
            end)()
        end
    end
})

Tab1:AddTextBox({
    Name = "Intervalo para o Loop √Åudio Normal",
    Description = "Define um Intervalo para o Loop √Åudio Normal",
    Default = "0.5",
    Callback = function(value)
        interval = tonumber(value) or 0.5  -- Atualiza o intervalo, valor padr√£o √© 0.1
        if interval <= 0 then
            interval = 0.5  -- Garante que o intervalo n√£o seja zero ou negativo
            print("Intervalo do Loop √Åudio Normal Definido")
        end
    end
})

local Paragraph = Tab1:AddParagraph({"Aten√ß√£o", "No √Åudio Normal Voc√™ deve Segurar a Sniper na M√£o Para que o √Åudio Funcione"})

 Tab1:AddSection({"√Åudio All FE"})

-- Vari√°veis
local Value = ""  -- ID do som ser√° inserido pelo usu√°rio ou selecionado no dropdown
local Speed = 1   -- Velocidade padr√£o (pode ser ajustada)
local isPlaying = false  -- Estado do toggle
local interval = 0.1  -- Tempo padr√£o entre execu√ß√µes
local musicList = {
    ["79520567252414 - √â pra apanhar e ficar calado"] = "79520567252414",
    ["124420331692210 - Z√© da Manga"] = "124420331692210",
    ["84193217395790 - L√° Ele"] = "84193217395790",
    ["84342842607926 - Receba"] = "84342842607926",
    ["86494561679259 - Cala a Boca Kenga"] = "86494561679259",
    ["135082533097287 - Pancada do Chaves"] = "135082533097287",
    ["5134648778 - Cavalo"] = "5134648778",
    ["18854692077 - Cat Laugh Meme"] = "18854692077",
    ["7236490488 - Loud Jumpscare"] = "7236490488",
    ["7337298420 - Risada do Sonic Exe"] = "7337298420",
    ["146563959 - Grito do Sonic Exe"] = "146563959",
    ["88347533205938 - Ai meu C*"] = "88347533205938",
    ["18603736229 - Ez"] = "18603736229",
    ["18984970630 - Vine Boom Meme"] = "18984970630",
    ["6349641063 - Bruh Meme"] = "6349641063",
    ["76088410130739 - Oxe Cad√™ meu Frango?"] = "76088410130739",
    ["18702236441 - Vou Nada"] = "18702236441",
    ["7405939280 - Explos√£o"] = "7405939280",
    ["7836929130 - Ohhh My God Meme"] = "7836929130",
    ["102325287973230 - Aughhhhh Meme"] = "102325287973230",
    ["17780313297 - Olha a Mensagem"] = "17780313297",
    ["17822597588 - Bora Bill"] = "17822597588",
    ["18808571870 - Notifica√ß√£o do WhatsApp"] = "18808571870",
    ["85919013678918 - Kleberiano e seu Presidente"] = "85919013678918",
    ["73951202577593 - O que eu fiz desgra√ßado"] = "73951202577593",
    ["71768583581267 - Parowwww"] = "71768583581267",
    ["72976103862201 - Eu j√° joguei todos eles"] = "72976103862201",
    ["120043497989758 - Eu j√° joguei todos esses Jogos (Velocidade 1.3)"] = "120043497989758",
    ["75501632675949 - Eu gosto √© assim, amostradinho"] = "75501632675949",
    ["95779977008485 - Eu sou Samurai"] = "95779977008485",
    ["83209327610828 - Falmengo"] = "83209327610828",
    ["123505593557440 - Pipipipipipi"] = "123505593557440",
    ["9063453269 - E quem disse que isso √© problema meu?"] = "9063453269",
    ["124516464058089 - Toma"] = "124516464058089",
    ["114636341953322 - Toma (Seu Madruga)"] = "114636341953322",
    ["124567830301951 - Tu √© doido"] = "124567830301951",
    ["98584020142549 - Meu fi quer Jogar de Bola?"] = "98584020142549",
    ["17654670293 - Nossa (Seu Madruga)"] = "17654670293",
    ["107412810787615 - Ohhhh My PC"] = "107412810787615",
    ["5681392704 - Siren Head Call"] = "5681392704",
    ["104569727573321 - Goat Man (I See You)"] = "104569727573321",
    ["120482191380512 - Cave Dweller"] = "120482191380512",
    ["98222659370267 - Man Form The Fog Spawn"] = "98222659370267",
    ["5351101493 - Jumpscare 1"] = "5351101493",
    ["18925320031 - Jumpscare 2"] = "18925320031",
    ["4617513181 - Help Me"] = "4617513181",
    ["5832059740 - Demon Scream 1"] = "5832059740",
    ["7043924315 - Robot Pain"] = "7043924315",
    ["4737106301 - Horror Sound 1"] = "4737106301",
    ["6486261822 - 380 HZ"] = "6486261822",
    ["128118682266898 - 1 HZ"] = "128118682266898",
    ["123201831625608 - Tira que eu vou cagar (Velocidade 1.8)"] = "123201831625608",
    ["93080278755343 - Oh meu deus, o que eu fiz? (Velocidade 1.3)"] = "93080278755343",
    ["74393167344888 - N√£o, n√£o (Chaves)"] = "74393167344888",
    ["84599272516537 - Caramba te atropelaram (Velocidade 1.3)"] = "84599272516537",
    ["71657146025636 - Why so Serious (Velocidade 1.3)"] = "71657146025636",
    ["129751173555656 - Geme meu Nome (Velocidade 1.3)"] = "129751173555656",
    ["132235711219080 - Chupeta"] = "132235711219080",
    ["74563462700748 - Freeza, por que voc√™ matou o Kuririn?"] = "74563462700748",
    ["71700111426066 - E morreu"] = "71700111426066",
    ["94350012510206 - Faz o L"] = "94350012510206",
    ["133181565563025 - E o Pix? Nada ainda? (Velocidade 1.1)"] = "133181565563025",
    ["72171849228899 - The Rake Scream 1"] = "72171849228899",
    ["18967004856 - The Rake Scream 2"] = "18967004856",
    ["9043345011 - Super Scream 1"] = "9043345011",
    ["9043345012 - Super Scream 2"] = "9043345012",
    ["108336423519786 - Super Scream 3"] = "108336423519786",
    ["9043345135 - Super Scream 4"] = "9043345135",
    ["104868924499219 - Super Scream 5"] = "104868924499219",
    ["1973317014 - Super Mario 64 Fall Scream"] = "1973317014",
    ["82284055473737 - Seu C√©rebro √© Burro"] = "82284055473737",
    ["138936629170553 - Ui Ele Gosta"] = "138936629170553",
    ["112244173773874 - Dan√ßa Gatinho, Dan√ßa"] = "112244173773874",
    ["18585340476 - Ai Lula (Kleberiano)"] = "18585340476",
    ["133885860917947 - Lula e Alexandre de Morais (Velocidade 1.3)"] = "133885860917947",
    ["100644063890026 - Por favor, me ajuda (Lula)"] = "100644063890026",
    ["85146723313238 - Fala Baixo"] = "85146723313238",
    ["100879595974514 - Tu √© Beta (Velocidade 1.2)"] = "100879595974514",
    ["117434960434893 - √â o Menino de Papai √©?"] = "117434960434893",
    ["86126187308121 - Deita Aqui"] = "86126187308121",
    ["94952829225606 - Pega o Jack (Velocidade 1.1)"] = "94952829225606",
    ["101242461910421 - Slk, N√£o Compensa"] = "101242461910421",
    ["8374059857 - Prowler Sound 1"] = "8374059857",
    ["82132507008392 - Prowler Sound 2"] = "82132507008392",
    ["106843479364998 - Meu Cora√ß√£o √© Pura Maldade (Vegeta)"] = "106843479364998",
    ["83788010495185 - Buhhhh (Minguado)"] = "83788010495185",
    ["8051776431 - Huggy Wuggy Jumpscare"] = "8051776431",
    ["75246199058473 - Poppy Playtime Alarme"] = "75246199058473",
    ["127588576195602 - Huggy Wuggy Roar"] = "127588576195602",
    ["7013846351 - M√©dico Dispon√≠vel (Velocidade 1.1)"] = "7013846351",
    ["99936497230394 - Trov√£o"] = "99936497230394",
    ["104483584177040 - Oiia Oiia"] = "104483584177040",
    ["113174873617518 - Hahahaha (Meme)"] = "113174873617518",
    ["8496017782 - HAHAHAHA"] = "8496017782",
    ["102678725302729 - Que isso Moreno (Velocidade 1.2)"] = "102678725302729",
    ["82364726700315 - Engole o Choro e Faz o L"] = "82364726700315",
    ["92175423082594 - Coca Cola Espuma"] = "92175423082594",
    ["103440368630269 - Que Nojo - Meme (Velocidade 1.2)"] = "103440368630269",
    ["441202925 - Dbz Punch Sound"] = "441202925",
    ["112442884771932 - T√° Travando"] = "112442884771932",
    ["87096180148960 - Chavooo"] = "87096180148960",
    ["99782709356719 - Rapaz ele t√° sem Zap"] = "99782709356719",
    ["137177653817621 - The Boiled One"] = "137177653817621",
    ["84663543883498 - I Ghost The Down Cool"] = "84663543883498",
    ["97476487963273 - Toma Jack no Sol Quente"] = "97476487963273",
    ["109689455115234 - Chicken Jockey"] = "109689455115234",
    ["81783906468616 - I am Steve (Velocidade 1.2)"] = "81783906468616",
    ["92539999916114 - The Nether"] = "92539999916114",
    ["121022461879318 - Flint and Steel"] = "121022461879318",
    ["126782971510996 - Olha a Carinha Dele (Velocidade 1.2)"] = "126782971510996",
    ["76119124192580 - R√°pido, eu n√£o quero morrer"] = "76119124192580",
    ["74368092673705 - Bistecone (Velocidade 1.3)"] = "74368092673705",
    ["127588453749028 - Ai Ai Ai"] = "127588453749028",
    ["85047967930223 - Kalew Ai Ai (Velocidade 1.1)"] = "85047967930223",
    ["96649978398443 - Ai Chega Chega (Velocidade 1.4)"] = "96649978398443",
}

local function playSoundLocally(Value, Speed)
    local soundId = "rbxassetid://" .. Value
    local sound = Instance.new("Sound")
    sound.SoundId = soundId
    sound.Parent = game.Workspace
    sound.Volume = 0.3
    sound.PlaybackSpeed = Speed  -- Velocidade do som

    sound:Play()

    -- O som ser√° destru√≠do ap√≥s 3 segundos, mas isso n√£o impede a execu√ß√£o cont√≠nua
    game:GetService("Debris"):AddItem(sound, 3)
end

-- Fun√ß√£o para enviar o evento ao servidor
local function playSoundServer(Value, Speed)
    local args = {
        [1] = workspace,
        [2] = Value,
        [3] = Speed
    }
    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gu1nSound1s"):FireServer(unpack(args))
end

Tab1:AddTextBox({
    Name = "ID do √Åudio All",
    Description = "Digite o ID do √Åudio All",
    Default = "",
    Callback = function(value)
        Value = value
    end
})

Tab1:AddDropdown({
    Name = "Selecione um √Åudio",
    Description = "Escolha um √Åudio j√° Definido",
    Options = (function()
        local keys = {}
        for k, _ in pairs(musicList) do
            table.insert(keys, k)
        end
        return keys
    end)(),
    Default = nil,
    Callback = function(selected)
        Value = musicList[selected]
    end
})

Tab1:AddButton({"Copiar ID do √Åudio Selecionado", function()
    setclipboard(Value)
end})

Tab1:AddTextBox({
    Name = "Velocidade do √Åudio All",
    Description = "Digite a Velocidade do √Åudio All",
    Default = "1",
    Callback = function(value)
        Speed = tonumber(value) or 1
    end
})

Tab1:AddButton({"Tocar √Åudio All", function()
    if Value == "" then
        print("Voc√™ n√£o colocou nenhum ID de √Åudio")
    else
        playSoundLocally(Value, Speed)  -- Toca o som localmente
        playSoundServer(Value, Speed)  -- Envia o evento ao servidor
    end
end})

local Toggle = Tab1:AddToggle({
    Name = "Tocar √Åudio All em Loop",
    Default = false,
    Callback = function(state)
        isPlaying = state  -- Atualizando o estado do toggle
        if isPlaying then
            -- Loop para tocar o som enquanto o toggle estiver ativado
            coroutine.wrap(function()
                while isPlaying do
                    if Value ~= "" then
                        playSoundLocally(Value, Speed)  -- Toca o som localmente
                        playSoundServer(Value, Speed)  -- Envia o evento ao servidor
                    else
                        print("Voc√™ n√£o colocou nenhum ID de √Åudio")
                        break
                    end
                    wait(interval)  -- Usa o intervalo definido pelo usu√°rio
                end
            end)()
        end
    end
})

Tab1:AddTextBox({
    Name = "Intervalo para o Loop √Åudio All",
    Description = "Define um Intervalo para o Loop √Åudio All",
    Default = "0.5",
    Callback = function(value)
        interval = tonumber(value) or 0.5  -- Atualiza o intervalo, valor padr√£o √© 0.1
        if interval <= 0 then
            interval = 0.5  -- Garante que o intervalo n√£o seja zero ou negativo
            print("Intervalo do Loop √Åudio All Definido")
        end
    end
})

local Paragraph = Tab1:AddParagraph({"Aten√ß√£o", "No √Åudio All Voc√™ n√£o Precisa Usar a Sniper"})

 Tab1:AddSection({"Anti Void"})

-- Vari√°vel de controle
local voidImmunityEnabled = false

-- Fun√ß√£o para ativar/desativar a imunidade ao void
local function setVoidImmunity(state)
    if state then
        workspace.FallenPartsDestroyHeight = 0/0
    else
        workspace.FallenPartsDestroyHeight = -500 -- Valor padr√£o do Roblox
    end
end

local Toggle = Tab1:AddToggle({
  Name = "Anti Void",
  Default = false,
  Callback = function(State)
    voidImmunityEnabled = State
        setVoidImmunity(voidImmunityEnabled)
  end
})

 Tab1:AddSection({"Anti Tool/Car Sit"})

-- Tabela para armazenar o estado original dos assentos
local originalSeatStates = {}
-- Tabela para armazenar as conex√µes dos eventos
local connections = {}

-- Fun√ß√£o que desabilita a habilidade de sentar
local function disableSeating()
    for _, seat in pairs(workspace:GetDescendants()) do
        if seat:IsA("Seat") or seat:IsA("VehicleSeat") then
            originalSeatStates[seat] = seat.Disabled
            seat.Disabled = true
        end
    end

    table.insert(connections, workspace.DescendantAdded:Connect(function(descendant)
        if descendant:IsA("Seat") or descendant:IsA("VehicleSeat") then
            originalSeatStates[descendant] = descendant.Disabled
            descendant.Disabled = true
        end
    end))

    for _, player in pairs(game:GetService("Players"):GetPlayers()) do
        table.insert(connections, player.CharacterAdded:Connect(function(character)
            table.insert(connections, character.DescendantAdded:Connect(function(descendant)
                if descendant:IsA("SeatWeld") then
                    descendant:Destroy()
                end
            end))
        end))
    end
end

-- Fun√ß√£o que reativa a habilidade de sentar
local function enableSeating()
    for seat, originalState in pairs(originalSeatStates) do
        if seat and seat.Parent then
            seat.Disabled = originalState
        end
    end

    -- Desconecta todos os eventos
    for _, connection in pairs(connections) do
        connection:Disconnect()
    end
    connections = {}

    -- Certifica-se de que todos os assentos estejam habilitados
    for _, seat in pairs(workspace:GetDescendants()) do
        if seat:IsA("Seat") or seat:IsA("VehicleSeat") then
            seat.Disabled = false
        end
    end

    -- Remove qualquer conex√£o de assento existente
    for _, player in pairs(game:GetService("Players"):GetPlayers()) do
        if player.Character then
            for _, descendant in pairs(player.Character:GetDescendants()) do
                if descendant:IsA("SeatWeld") then
                    descendant:Destroy()
                end
            end
        end
    end
end

local Toggle = Tab1:AddToggle({
  Name = "Anti Tool/Car Sit",
  Default = false,
  Callback = function(value)
    if value then
            disableSeating()
        else
            enableSeating()
        end
  end
})

 Tab1:AddSection({"Anti Lag Server (Digite o Nome do Jogador que Est√° Causando Lag)"})

local Players = game:GetService("Players")
local PlayerName = ""

Tab1:AddTextBox({
  Name = "Anti Lag Server",
  Description = "Digite o Nome do Jogador que est√° Lagando o Servidor",
  Default = "",
  Callback = function(value)
        PlayerName = value
  end
})

Tab1:AddButton({"Ativar Anti Lag Server", function()
  if PlayerName and PlayerName ~= "" then
            for _, player in ipairs(Players:GetPlayers()) do
                if string.find(player.Name:lower(), PlayerName:lower()) then
                    local character = workspace:FindFirstChild(player.Name)
                    if character then
                        character:Destroy()
                    end
                    local playerInstance = Players:FindFirstChild(player.Name)
                    if playerInstance then
                        playerInstance:Destroy()
                    end
                end
            end
        else
            print("Jogador n√£o Encontrado")
        end
end})

 Tab1:AddSection({"Tornado"})

local Toggle = Tab1:AddToggle({
  Name = "Tornado",
  Default = false,
  Callback = function(Value)
  if Value then
    loadstring(game:HttpGet("https://github.com/contateste8/TornadoOn/raw/refs/heads/main/TornadoOn.txt"))()
  else
    loadstring(game:HttpGet("https://github.com/contateste8/TornadoOff/raw/refs/heads/main/TornadoOff.txt"))()
    end
  end
})

 Tab1:AddSection({"ESP"})

local espEnabled = false -- Vari√°vel para rastrear o estado do ESP
local playerConnections = {} -- Tabela para rastrear conex√µes dos jogadores

-- Fun√ß√£o para criar o ESP
local function createESP(player)
    if player == game.Players.LocalPlayer then return end -- Ignorar o jogador local

    local function setupESP(character)
        if not character:FindFirstChild("Head") then
            character:WaitForChild("Head") -- Garante que a cabe√ßa exista
        end
        if not character:FindFirstChildOfClass("Humanoid") then
            character:WaitForChild("Humanoid") -- Garante que o humanoide exista
        end

        -- Criando o Highlight
        local highlight = Instance.new("Highlight")
        highlight.Name = "ESP_Highlight"
        highlight.FillColor = Color3.new(1, 1, 1) -- Branco
        highlight.FillTransparency = 0.5 -- Transpar√™ncia no contorno
        highlight.OutlineTransparency = 0 -- Contorno s√≥lido
        highlight.Parent = character

        -- Tornando o jogador branco transparente
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") and part.Transparency < 1 then
                part:SetAttribute("OriginalTransparency", part.Transparency) -- Salva a transpar√™ncia original
                part:SetAttribute("OriginalColor", part.Color) -- Salva a cor original
                part.Transparency = 0.5 -- Define transpar√™ncia para 50%
                part.Color = Color3.new(1, 1, 1) -- Deixa a cor branca
            end
        end

        -- Criando o BillboardGui
        local billboardGui = Instance.new("BillboardGui")
        billboardGui.Name = "ESP_Info"
        billboardGui.Size = UDim2.new(0, 150, 0, 30)
        billboardGui.StudsOffset = Vector3.new(0, 3, 0)
        billboardGui.Adornee = character:FindFirstChild("Head")
        billboardGui.AlwaysOnTop = true
        billboardGui.Parent = character

        -- Criando o Texto
        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.TextColor3 = Color3.new(1, 1, 1)
        textLabel.TextStrokeTransparency = 1 -- Remover o contorno preto
        textLabel.TextScaled = true
        textLabel.Font = Enum.Font.SourceSans -- Fonte alterada para SourceSans
        textLabel.Parent = billboardGui

        -- Atualizar as informa√ß√µes imediatamente
        local function updateInfo()
            if character and character:FindFirstChild("Humanoid") and character.PrimaryPart then
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                local distance = math.floor((character.PrimaryPart.Position - game.Players.LocalPlayer.Character.PrimaryPart.Position).Magnitude)
                textLabel.Text = string.format("%s | Vida: %d | Dist√¢ncia: %d", player.Name, math.floor(humanoid.Health), distance)
            end
        end

        -- Atualizar as informa√ß√µes em loop
        task.spawn(function()
            while espEnabled and character and character:FindFirstChild("Humanoid") do
                updateInfo()
                task.wait(1)
            end
        end)

        -- Atualizar imediatamente ao criar
        updateInfo()
    end

    if player.Character then
        setupESP(player.Character)
    end

    player.CharacterAdded:Connect(function(character)
        if espEnabled then
            setupESP(character)
        end
    end)
end

-- Fun√ß√£o para remover o ESP de um jogador
local function removeESP(player)
    if player.Character then
        -- Remover Highlight
        if player.Character:FindFirstChild("ESP_Highlight") then
            player.Character.ESP_Highlight:Destroy()
        end
        -- Remover BillboardGui
        if player.Character:FindFirstChild("ESP_Info") then
            player.Character.ESP_Info:Destroy()
        end
        -- Restaurar cor e transpar√™ncia original
        for _, part in pairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                if part:GetAttribute("OriginalTransparency") then
                    part.Transparency = part:GetAttribute("OriginalTransparency") -- Restaurar transpar√™ncia
                    part:SetAttribute("OriginalTransparency", nil) -- Remover atributo
                end
                if part:GetAttribute("OriginalColor") then
                    part.Color = part:GetAttribute("OriginalColor") -- Restaurar cor original
                    part:SetAttribute("OriginalColor", nil) -- Remover atributo
                end
            end
        end
    end
end

-- Fun√ß√£o para ativar o ESP
local function enableESP()
    espEnabled = true
    for _, player in pairs(game.Players:GetPlayers()) do
        -- Criar ESP imediatamente quando o jogador j√° est√° no jogo
        if player.Character then
            createESP(player)
        end
        -- Conex√£o para futuros personagens do jogador
        playerConnections[player] = player.CharacterAdded:Connect(function(character)
            if espEnabled then
                createESP(player)
            end
        end)
    end

    -- Conex√£o para novos jogadores
    playerConnections["PlayerAdded"] = game.Players.PlayerAdded:Connect(function(player)
        if espEnabled then
            -- Criar ESP imediatamente para novos jogadores
            if player.Character then
                createESP(player)
            end
            -- Conectar ao evento CharacterAdded
            playerConnections[player] = player.CharacterAdded:Connect(function(character)
                createESP(player)
            end)
        end
    end)
end

-- Fun√ß√£o para desativar o ESP
local function disableESP()
    espEnabled = false
    for _, player in pairs(game.Players:GetPlayers()) do
        removeESP(player)
        -- Desconectar eventos associados ao jogador
        if playerConnections[player] then
            playerConnections[player]:Disconnect()
            playerConnections[player] = nil
        end
    end

    -- Desconectar o evento de novos jogadores
    if playerConnections["PlayerAdded"] then
        playerConnections["PlayerAdded"]:Disconnect()
        playerConnections["PlayerAdded"] = nil
    end
end

local Toggle = Tab1:AddToggle({
  Name = "Ativar ESP",
  Default = false,
  Callback = function(state)
    if state then
        enableESP()
    else
        disableESP()
    end
  end
})

 Tab1:AddSection({"Spam"})

-- Vari√°veis para controle do envio autom√°tico
local autoSend = false
local messageToSend = ""

-- Fun√ß√£o para iniciar o envio autom√°tico
local function startAutoSend()
    while autoSend do
        local TextChatService = game:GetService("TextChatService")
        TextChatService.TextChannels.RBXGeneral:SendAsync(messageToSend) -- Envia a mensagem normal
        wait(2) -- Aguarda 1 segundo
    end
end

Tab1:AddTextBox({
  Name = "Spam",
  Description = "Digite o Texto para Spam",
  Default = "",
  Callback = function(Value)
    messageToSend = Value
  end
})

local Toggle = Tab1:AddToggle({
  Name = "Ativar Spam",
  Default = false,
  Callback = function(State)
    autoSend = State
        if State then
            startAutoSend()
        end
  end
})

Tab1:AddSection({"Chat Bypass"})

local bypassModes = {
    V1 = {
        a = "√¢", b = "…ì", c = "ƒâ", d = "ƒè", e = "√™", f = "f", g = "ƒù", h = "ƒ•",
        i = "√Æ", j = "ƒµ", k = "∆ô", l = "ƒæ", m = "m", n = "≈à", o = "√¥", p = "p",
        q = "q", r = "≈ô", s = "≈ù", t = "≈•", u = "√ª", v = "v", w = "w", x = "x",
        y = "≈∑", z = "≈æ", A = "√Ç", B = "∆Å", C = "ƒà", D = "ƒé", E = "√ä",
        F = "F", G = "ƒú", H = "ƒ§", I = "√é", J = "ƒ¥", K = "∆ò", L = "ƒΩ",
        M = "M", N = "≈á", O = "√î", P = "P", Q = "Q", R = "≈ò", S = "≈ú",
        T = "≈§", U = "√õ", V = "V", W = "W", X = "X", Y = "≈∂", Z = "≈Ω"
    },
    V2 = {
        a = "·∫°", b = "·∏Ö", c = "c", d = "·∏ç", e = "·∫π", f = "f", g = "…°", h = "·∏•",
        i = "·ªã", j = "—ò", k = "·∏≥", l = "·∏∑", m = "·πÉ", n = "·πá", o = "·ªç", p = "—Ä",
        q = "q", r = "·πõ", s = "·π£", t = "·π≠", u = "·ª•", v = "·πø", w = "·∫â", x = "·∫ã",
        y = "·ªµ", z = "·∫ì", A = "·∫†", B = "·∏Ñ", C = "C", D = "·∏å", E = "·∫∏", F = "F",
        G = "ƒ¢", H = "·∏§", I = "·ªä", J = "J", K = "·∏≤", L = "·∏∂", M = "·πÇ", N = "·πÜ",
        O = "·ªå", P = "–†", Q = "Q", R = "·πö", S = "·π¢", T = "·π¨", U = "·ª§", V = "·πæ",
        W = "·∫à", X = "·∫ä", Y = "·ª¥", Z = "·∫í"
    },
    V3 = {
        a = "a-'", b = "b-'", c = "c-'", d = "d-'", e = "e-'", f = "f-'", g = "g-'", h = "h-'",
        i = "i-'", j = "j-'", k = "k-'", l = "l-'", m = "m-'", n = "n-'", o = "o-'", p = "p-'",
        q = "q-'", r = "r-'", s = "s-'", t = "t-'", u = "u-'", v = "v-'", w = "w-'", x = "x-'",
        y = "y-'", z = "z-'", A = "A-'", B = "B-'", C = "C-'", D = "D-'", E = "E-'", F = "F-'",
        G = "G-'", H = "H-'", I = "I-'", J = "J-'", K = "K-'", L = "L-'", M = "M-'", N = "N-'",
        O = "O-'", P = "P-'", Q = "Q-'", R = "R-'", S = "S-'", T = "T-'", U = "U-'", V = "V-'",
        W = "W-'", X = "X-'", Y = "Y-'", Z = "Z-'"
    }
}

local function convertMessage(message, mode)
    local characterMap = bypassModes[mode]
    local styledMessage = ""
    for i = 1, #message do
        local char = message:sub(i, i)
        styledMessage = styledMessage .. (characterMap[char] or char)
    end
    return styledMessage
end

local autoConvertEnabled = false
local selectedMode = "V1" -- Padr√£o

local exampleText = "Exemplo"
local options = {
    ["V1"] = "Chat Bypass V1 - " .. convertMessage(exampleText, "V1"),
    ["V2"] = "Chat Bypass V2 - " .. convertMessage(exampleText, "V2"),
    ["V3"] = "Chat Bypass V3 - " .. convertMessage(exampleText, "V3")
}

Tab1:AddDropdown({
  Name = "Selecione um M√©todo de Chat Bypass",
  Options = {options["V1"], options["V2"], options["V3"]},
  Default = options["V1"],
  MultSelect = false,
  Callback = function(Value)
    for mode, displayText in pairs(options) do
        if Value == displayText then
            selectedMode = mode
            break
        end
    end
  end
})

Tab1:AddTextBox({
    Name = "Digite a Mensagem",
    Description = "Escreva a mensagem para convers√£o",
    Default = "",
    Callback = function(Value)
        if Value ~= "" then
            local styledMessage = convertMessage(Value, selectedMode)
            local TextChatService = game:GetService("TextChatService")
            TextChatService.TextChannels.RBXGeneral:SendAsync(styledMessage)
        end
    end
})

Tab1:AddToggle({
    Name = "Auto Bypass",
    Default = false,
    Callback = function(Value)
        autoConvertEnabled = Value
        print("Auto Bypass " .. (Value and "ativado" or "desativado"))
    end
})

local textBox = game:GetService("CoreGui"):FindFirstChild("ExperienceChat")
if textBox then
    textBox = textBox.appLayout.chatInputBar.Background.Container.TextContainer.TextBoxContainer.TextBox
    textBox.FocusLost:Connect(function(enter)
        if enter and autoConvertEnabled then
            if textBox.Text ~= "" then
                local styledMessage = convertMessage(textBox.Text, selectedMode)
                game:GetService("TextChatService").TextChannels.RBXGeneral:SendAsync(styledMessage)
                textBox.Text = ""
            end
        end
    end)
end

 Tab1:AddSection({"Velocidade de Ve√≠culo"})

Tab1:AddTextBox({
  Name = "Velocidade de Ve√≠culo",
  Description = "Define a Velocidade de seu Ve√≠culo",
  Default = "25",
  Callback = function(TopSpeedValue)
    workspace.Vehicles[game.Players.LocalPlayer.Name .. "Car"].Body.VehicleSeat.TopSpeed.Value = TopSpeedValue
  end
})

Tab1:AddTextBox({
  Name = "Turbo de Ve√≠culo",
  Description = "Define o Turbo de seu Ve√≠culo",
  Default = "11.3",
  Callback = function(TurboValue)
    workspace.Vehicles[game.Players.LocalPlayer.Name .. "Car"].Body.VehicleSeat.Turbo.Value = TurboValue
  end
})

 Tab1:AddSection({"Notificar Sa√≠da e Entrada dos Jogadores"})

local Players = game:GetService("Players")
local connections = {} -- Tabela para armazenar as conex√µes

local Toggle = Tab1:AddToggle({
  Name = "Ativar Notifica√ß√µes",
  Default = false,
  Callback = function(Value)
    if Value then
    -- Conectar eventos para detectar entrada e sa√≠da de jogadores
    connections.PlayerAdded = Players.PlayerAdded:Connect(function(player)
        Library:MakeNotify({
            Title = "Entrada de Jogador",
            Text = player.Name .. " (" .. player.DisplayName .. ") Entrou no Servidor",
            Time = 5
        })
    end)

    connections.PlayerRemoving = Players.PlayerRemoving:Connect(function(player)
        Library:MakeNotify({
            Title = "Sa√≠da de Jogador",
            Text = player.Name .. " (" .. player.DisplayName .. ") Saiu do Servidor!",
            Time = 5
        })
    end)
else
    -- Desconectar eventos e limpar tabela
    if connections.PlayerAdded then
        connections.PlayerAdded:Disconnect()
    end
    if connections.PlayerRemoving then
        connections.PlayerRemoving:Disconnect()
    end
    connections = {}
end
  end
})

 Tab1:AddSection({"Chat"})

Tab1:AddButton({"Mensagem Gigante Invis√≠vel", function()
loadstring(game:HttpGet("https://github.com/contateste8/GiantChat/raw/refs/heads/main/GiantMessage"))()
end})

local msg = ""

Tab1:AddTextBox({
  Name = "Digite a Mensagem",
  Description = "Mensagem Gigante no Chat s√≥ que com um Texto",
  Default = "",
  Callback = function(value)
    msg = value
  end
})

Tab1:AddButton({"Enviar Mensagem", function()
    local giantMessage = loadstring(game:HttpGet("https://github.com/contateste8/GiantMessage2/raw/refs/heads/main/MessageGiant"))()
    giantMessage(msg) -- Agora passa a vari√°vel msg corretamente
end})

 Tab1:AddSection({"Casas"})

local toggles = { HouseLoop = false }

-- Vari√°vel para armazenar a casa selecionada
local selectedHouse = nil

 Tab1:AddDropdown({
  Name = "Loop Pegar Casa (Selecione a Casa)",
  Description = "LoopHouse",
  Options = {"Casa 1", "Casa 2", "Casa 3", "Casa 4", "Casa 5", "Casa 6", "Casa 7", "Casa 8", "Casa 9", "Casa 10", "Casa 11",  
"Casa 12", "Casa 13", "Casa 14", "Casa 15", "Casa 16",  
"Casa 17", "Casa 18", "Casa 19", "Casa 20", "Casa 21",  
"Casa 22", "Casa 23", "Casa 24", "Casa 25", "Casa 26",  
"Casa 27", "Casa 28", "Casa 29", "Casa 30", "Casa 31",  
"Casa 32", "Casa 33", "Casa 34", "Casa 35", "Casa 36",  
"Casa 37"},
  Default = "Casa 7",
  Flag = "LoopHouse",
  Callback = function(selectedOption)
    local houseNumber = tonumber(selectedOption:match("Casa (%d+)"))
        if houseNumber then
            selectedHouse = houseNumber
            print("Casa selecionada: " .. selectedOption)
        else
            print("Erro: N√£o foi poss√≠vel selecionar a casa.")
        end
  end
})

Tab1:AddButton({"Iniciar Loop Pegar Casa", function()
  if not selectedHouse then
            print("Erro: Por favor, selecione uma casa primeiro.")
            return
        end

        toggles.HouseLoop = true
        print("Loop iniciado para a Casa: " .. selectedHouse)

        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        if not ReplicatedStorage then
            print("Erro: ReplicatedStorage n√£o encontrado.")
            toggles.HouseLoop = false
            return
        end

        spawn(function()
            while toggles.HouseLoop and task.wait(0.1) do
                pcall(function()
                    ReplicatedStorage.RE["1Gettin1gHous1e"]:FireServer("PickingCustomHouse", "015_House", selectedHouse)
                    ReplicatedStorage.RE["1Player1sHous1eChoic1e"]:FireServer("PlayerSellHouse")
                end)
            end
        end)
end})

Tab1:AddButton({"Parar o Loop Pegar Casa", function()
  if toggles.HouseLoop then
            toggles.HouseLoop = false
            print("Loop parado com sucesso")
        else
            print("Erro, Nenhum loop est√° ativo")
        end
end})

Tab1:AddSection({"Ser Desbanido de Todas as Casas"})

do
local Connection

local function VerificarEApagarDireto(obj)
	local bannedMatch = string.match(obj.Name, "^BannedBlock(%d+)$")
	local propMatch = string.match(obj.Name, "^PropBlocker(%d+)$")
	local num = tonumber(bannedMatch) or tonumber(propMatch)

	if num and num >= 1 and num <= 37 then
		if obj and obj.Parent then
			obj:Destroy()
		end
	end
end

local function VerificarEApagarComDelay(obj)
	local bannedMatch = string.match(obj.Name, "^BannedBlock(%d+)$")
	local propMatch = string.match(obj.Name, "^PropBlocker(%d+)$")
	local num = tonumber(bannedMatch) or tonumber(propMatch)

	if num and num >= 1 and num <= 37 then
		task.delay(1, function()
			if obj and obj.Parent then
				obj:Destroy()
			end
		end)
	end
end

Tab1:AddButton({"Ser Desbanido de Todas as Casas", function()
local lot = workspace:FindFirstChild("001_Lots")
		if lot then
			for _, obj in ipairs(lot:GetDescendants()) do
				VerificarEApagarDireto(obj)
			end
		else
			warn("001_Lots n√£o encontrado")
		end
end})

Tab1:AddToggle({
  Name = "Ser Desbanido Automaticamente de Todas as Casas",
  Default = false,
  Callback = function(Value)
 local lot = workspace:FindFirstChild("001_Lots")
		if lot then
			if Value then
				for _, obj in ipairs(lot:GetDescendants()) do
					VerificarEApagarComDelay(obj)
				end
				Connection = lot.DescendantAdded:Connect(VerificarEApagarComDelay)
			else
				if Connection then
					Connection:Disconnect()
					Connection = nil
				end
			end
		else
			warn("001_Lots n√£o encontrado")
		end
  end
})
end

Tab1:AddSection({"Pegar Permiss√£o de Casas"})

local houses = {}
for i = 1, 37 do
    table.insert(houses, "Casa " .. i)
end

local selectedHouse = 1

Tab1:AddDropdown({
    Name = "Selecione a Casa",
    Options = houses,
    Default = {"Casa 1"},
    MultiSelect = false,
    Callback = function(Value)
        selectedHouse = tonumber(string.match(Value, "%d+"))
    end
})

Tab1:AddButton({
    Name = "Pegar Permiss√£o",
    Callback = function()
        local args = {
            [1] = "GivePermissionLoopToServer",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = selectedHouse
        }
        
        game:GetService("ReplicatedStorage").RE:FindFirstChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
    end
})

Tab1:AddButton({"Pegar Permiss√£o de Todas as Casas", function()
  local player = game:GetService("Players").LocalPlayer
local remoteEvent = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Playe1rTrigge1rEven1t")

if remoteEvent then
    local currentHouse = 1

    local function givePermission()
        local args = {
            [1] = "GivePermissionLoopToServer",
            [2] = player,
            [3] = currentHouse
        }
        remoteEvent:FireServer(unpack(args))
        currentHouse = currentHouse + 1

        if currentHouse <= 37 then
            wait(0.1)
            givePermission()
        end
    end

    givePermission()
end
end})

Tab1:AddSection({"Remover Tempo de Espera para Pegar uma Casa"})

Tab1:AddButton({"Remover Tempo de Espera para Pegar uma Casa", function()
  local VIPValue = game:GetService("Players").LocalPlayer.PlayersBag.VIP
VIPValue.Value = true
end})

 Tab1:AddSection({"Copiar Avatar"})

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RE = ReplicatedStorage:FindFirstChild("RE")

local Target = nil

Tab1:AddTextBox({
Name = "Nome do Jogador",
Description = "Digite parte do nome ou display name",
Default = "",
Callback = function(input)
for _, player in ipairs(Players:GetPlayers()) do
if player.Name:lower():find(input:lower(), 1, true) or player.DisplayName:lower():find(input:lower(), 1, true) then
Target = player.Name
print("Jogador encontrado:", player.Name)
return
end
end
Target = nil
print("Nenhum jogador encontrado")
end
})

Tab1:AddButton({"Copiar Avatar", function()
if not Target then
print("Selecione um jogador primeiro!")
return
end

local Player = Players:FindFirstChild(Target)
if not Player or not Player.Character then
print("Jogador n√£o encontrado")
return
end

local Character = Player.Character
local Humanoid = Character:FindFirstChildOfClass("Humanoid")
if not Humanoid then return end

local PDesc = Humanoid:GetAppliedDescription()
local LPDesc = Players.LocalPlayer.Character.Humanoid:GetAppliedDescription()

for _, v in ipairs(LPDesc:GetAccessories(true)) do
if v.AssetId then
task.wait(0.3)
local args = {
[1] = tonumber(PDesc.Shirt)

}

game:GetService("ReplicatedStorage").Remotes.Wear:InvokeServer(unpack(args))
end
end

task.wait(0.1)
local args = {
[1] = tonumber(PDesc.Shirt)

}

game:GetService("ReplicatedStorage").Remotes.Wear:InvokeServer(unpack(args))
task.wait(0.5)
local args = {
[1] = tonumber(PDesc.Pants)
}

game:GetService("ReplicatedStorage").Remotes.Wear:InvokeServer(unpack(args))
task.wait(0.5)
local args = {
[1] = {
[1] = PDesc.Torso,
[2] = PDesc.RightArm,
[3] = PDesc.LeftArm,
[4] = PDesc.RightLeg,
[5] = PDesc.LeftLeg,
[6] = PDesc.Head
}
}

game:GetService("ReplicatedStorage").Remotes.ChangeCharacterBody:InvokeServer(unpack(args))
task.wait(0.5)
local args = {
[1] = tonumber(PDesc.Face)
}

game:GetService("ReplicatedStorage").Remotes.Wear:InvokeServer(unpack(args))

for _, v in ipairs(PDesc:GetAccessories(true)) do
if v.AssetId then
task.wait(0.3)
local args = {
[1] = tonumber(v.AssetId)

}

game:GetService("ReplicatedStorage").Remotes.Wear:InvokeServer(unpack(args))
end
end

local SkinColor = Character:FindFirstChild("Body Colors")
if SkinColor then
task.wait(0.5)
local args = {
[1] = tostring(SkinColor.HeadColor)

}

game:GetService("ReplicatedStorage").Remotes.ChangeBodyColor:FireServer(unpack(args))
end

local function GetRPValue(path)
local success, value = pcall(function()
return Player.PlayersBag[path].Value
end)
return success and value or nil
end

local RPName = GetRPValue("RPName")
local RPNameColor = GetRPValue("RPNameColor")
local RPBio = GetRPValue("RPBio")
local RPBioColor = GetRPValue("RPBioColor")

if RPName then
RE:FindFirstChild("1RPNam1eTex1t"):FireServer("RolePlayName", RPName)
end

if RPNameColor then
    local c = RPNameColor
    if typeof(c) == "table" and c.R and c.G and c.B then
        c = Color3.new(c.R / 255, c.G / 255, c.B / 255)
    end
    RE:WaitForChild("1RPNam1eColo1r"):FireServer("PickingRPNameColor", c)
end

if RPBio then
RE:FindFirstChild("1RPNam1eTex1t"):FireServer("RolePlayBio", RPBio)
end

if RPBioColor then
    local c = RPBioColor
    if typeof(c) == "table" and c.R and c.G and c.B then
        c = Color3.new(c.R / 255, c.G / 255, c.B / 255)
    end
    RE:WaitForChild("1RPNam1eColo1r"):FireServer("PickingRPBioColor", c)
end

local Animations = {
"IdleAnimation", "WalkAnimation", "RunAnimation",
"JumpAnimation", "ClimbAnimation", "FallAnimation",
"SwimAnimation", "SwimIdleAnimation"
}

for _, anim in ipairs(Animations) do
local AnimId = tonumber(PDesc[anim])
if AnimId and AnimId > 0 then
task.wait(0.3)
local args = {
[1] = AnimId

}

game:GetService("ReplicatedStorage").Remotes.Wear:InvokeServer(unpack(args))
end
end

local Animations = {
"IdleAnimation", "WalkAnimation", "RunAnimation",
"JumpAnimation", "ClimbAnimation", "FallAnimation",
"SwimAnimation", "SwimIdleAnimation"
}

for _, anim in ipairs(Animations) do
local AnimId = tonumber(PDesc[anim])
if AnimId and AnimId > 0 then
task.wait(0.3)
local args = {
[1] = AnimId

}

game:GetService("ReplicatedStorage").Remotes.Wear:InvokeServer(unpack(args))
end
end

print("Avatar copiado com sucesso")

end})

 Tab1:AddSection({"Nome e Bio"})

local loopAtivo = false

function alternarCores()
    while loopAtivo do
        local cores = {
            Color3.new(0.546, 0, 1),
            Color3.new(1, 0, 0.878),
            Color3.new(1, 0, 0.057),
            Color3.new(1, 0.968, 0),
            Color3.new(0, 1, 0.171),
            Color3.new(0, 0.974, 1),
            Color3.new(0.197, 0, 1)
        }

        for _, cor in ipairs(cores) do
            if not loopAtivo then break end
            local args = {
                [1] = "PickingRPNameColor",
                [2] = cor
            }
            game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1RPNam1eColo1r"):FireServer(unpack(args))
            wait(0.5)
        end
        wait(0.5)
    end
end

local Toggle = Tab1:AddToggle({
  Name = "Nome Colorido",
  Default = false,
  Callback = function(Value)
    loopAtivo = Value
        if loopAtivo then
            task.spawn(alternarCores)
        end
  end
})

-- Bio

local loopAtivoBio = false

function alternarCoresBio()
    while loopAtivoBio do
        local coresBio = {
            Color3.new(0.546, 0, 1),
            Color3.new(1, 0, 0.878),
            Color3.new(1, 0, 0.057),
            Color3.new(1, 0.968, 0),
            Color3.new(0, 1, 0.171),
            Color3.new(0, 0.974, 1),
            Color3.new(0.197, 0, 1)
        }

        for _, cor in ipairs(coresBio) do
            if not loopAtivoBio then break end

            -- Alterar cor da bio
            game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1RPNam1eColo1r"):FireServer("PickingRPBioColor", cor)

            wait(0.5)
        end
        wait(0.5)
    end
end

local Toggle = Tab1:AddToggle({
  Name = "Bio Colorida",
  Default = false,
  Callback = function(BioValue)
    loopAtivoBio = BioValue
        if loopAtivoBio then
            task.spawn(alternarCoresBio)
        end
  end
})

 Tab1:AddSection({"Carro e Casa"})

local loopAtivoCar = false

function alternarCoresCarro()
    while loopAtivoCar do
        local coresCar = {
            Color3.new(0.546, 0, 1),
            Color3.new(1, 0, 0.878),
            Color3.new(1, 0, 0.057),
            Color3.new(1, 0.968, 0),
            Color3.new(0, 1, 0.171),
            Color3.new(0, 0.974, 1),
            Color3.new(0.197, 0, 1)
        }

        for _, cor in ipairs(coresCar) do
            if not loopAtivoCar then break end

            -- Alterar cor do carro
            game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sCa1r"):FireServer("PickingCarColor", cor)

            wait(0.5)
        end
        wait(0.5)
    end
end

local Toggle = Tab1:AddToggle({
  Name = "Carro Colorido",
  Default = false,
  Callback = function(CarValue)
    loopAtivoCar = CarValue
        if loopAtivoCar then
            task.spawn(alternarCoresCarro)
        end
  end
})

local loopAtivoHouse = false

function alternarCoresCasa()
    while loopAtivoHouse do
        local coresHouse = {
            Color3.new(0.546, 0, 1),
            Color3.new(1, 0, 0.878),
            Color3.new(1, 0, 0.057),
            Color3.new(1, 0.968, 0),
            Color3.new(0, 1, 0.171),
            Color3.new(0, 0.974, 1),
            Color3.new(0.197, 0, 1)
        }

        for _, cor in ipairs(coresHouse) do
            if not loopAtivoHouse then break end

            -- Alterar cor da casa
            game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sHous1e"):FireServer("ColorPickHouse", cor)

            wait(0.5)
        end
        wait(0.5)
    end
end

local Toggle = Tab1:AddToggle({
  Name = "Casa Colorida",
  Default = false,
  Callback = function(HouseValue)
    loopAtivoHouse = HouseValue
        if loopAtivoHouse then
            task.spawn(alternarCoresCasa)
        end
  end
})

Tab1:AddToggle({
  Name = "Fogo na Casa",
  Default = false,
  Callback = function(FireHouse)
    if FireHouse then
local args = {
    [1] = "PlayerWantsFire"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Player1sHous1e"):FireServer(unpack(args))
else
local args = {
    [1] = "PlayerWantsFireOffFirePass"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Player1sHous1e"):FireServer(unpack(args))
        end
  end
})

Tab1:AddTextBox({
  Name = "ID de √Åudio no Carro (Requer Gamepass)",
  Description = "Insira um ID de √Åudio para Tocar ele no seu Carro",
  Default = "",
  Callback = function(CarMusicValue)
    local args = {
    [1] = "PickingCarMusicText",
    [2] = CarMusicValue
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Player1sCa1r"):FireServer(unpack(args))

  end
})

Tab1:AddTextBox({
  Name = "ID de √Åudio na Casa (Requer Gamepass)",
  Description = "Insira um ID de √Åudio para Tocar ele na sua Casa",
  Default = "",
  Callback = function(HouseMusicValue)
    local args = {
    [1] = "PickHouseMusicText",
    [2] = HouseMusicValue
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Player1sHous1e"):FireServer(unpack(args))

  end
})

Tab1:AddTextBox({
  Name = "ID de √Åudio em Skates/Overboards (Requer Gamepass)",
  Description = "Insira um ID de √Åudio para Tocar ele no seu Skate/Overboard",
  Default = "",
  Callback = function(NoMotorMusicValue)
    local args = {
    [1] = "PickingScooterMusicText",
    [2] = NoMotorMusicValue
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1NoMoto1rVehicle1s"):FireServer(unpack(args))

  end
})

Tab1:AddSection({"Auto Coletar Ovos (P√°scoa)"})

do
	local ativo = false

	Tab1:AddToggle({
		Name = "Auto Coletar Ovos",
		Callback = function(v)
			ativo = v
			if ativo then
				task.spawn(function()
					while ativo do
						game.ReplicatedStorage.Remotes.EggCollected:InvokeServer()
						task.wait()
					end
				end)
			end
		end
	})
end

Tab1:AddSection({"Iniciar Modos (P√°scoa)"})

Tab1:AddButton({
  Name = "Iniciar Modo Baby",
  Callback = function()
    local args = {
    [1] = "Baby"
}

game:GetService("ReplicatedStorage").Remotes.ChangeDifficulty:FireServer(unpack(args))

  end
})

Tab1:AddButton({
  Name = "Iniciar Modo Easy",
  Callback = function()
    local args = {
    [1] = "Easy"
}

game:GetService("ReplicatedStorage").Remotes.ChangeDifficulty:FireServer(unpack(args))

  end
})

Tab1:AddButton({
  Name = "Iniciar Modo Medium",
  Callback = function()
    local args = {
    [1] = "Medium"
}

game:GetService("ReplicatedStorage").Remotes.ChangeDifficulty:FireServer(unpack(args))

  end
})

Tab1:AddButton({
  Name = "Iniciar Modo Hard",
  Callback = function()
    local args = {
    [1] = "Hard"
}

game:GetService("ReplicatedStorage").Remotes.ChangeDifficulty:FireServer(unpack(args))

  end
})

Tab1:AddButton({
  Name = "Iniciar Modo Extreme",
  Callback = function()
    local args = {
    [1] = "Extreme"
}

game:GetService("ReplicatedStorage").Remotes.ChangeDifficulty:FireServer(unpack(args))

  end
})

Tab1:AddSection({"Avatar Colorido"})

local loopAtivoAvatar = false

function alternarCoresAvatar()
    while loopAtivoAvatar do
        local coresAvatar = {
            "Institutional white",
            "Magenta",
            "Royal purple",
            "Really blue",
            "Toothpaste",
            "Lime green",
            "New Yeller",
        }

        for _, cor in ipairs(coresAvatar) do
            if not loopAtivoAvatar then break end
local args = {
    [1] = "skintone",
    [2] = cor
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Updat1eAvata1r"):FireServer(unpack(args))

            wait(0.5)
        end
        wait(0.1)
    end
end

Tab1:AddToggle({
  Name = "Avatar Colorido",
  Default = false,
  Callback = function(AvatarValue)
    loopAtivoAvatar = AvatarValue
        if loopAtivoAvatar then
            task.spawn(alternarCoresAvatar)
        end
  end
})

Tab1:AddSection({"Puxar Carros"})

local player = game.Players.LocalPlayer
local originalPosition = nil -- Armazena as coordenadas originais do jogador
local selectedPlayer = "" -- Nome parcial do jogador digitado
local cars = {} -- Tabela de carros por jogador

-- Fun√ß√£o para teleportar o carro
local function teleportCar(targetCar, x, y, z)
    if targetCar then
        for _, part in pairs(targetCar:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Anchored = true -- Ancorar todas as partes para evitar bugs de f√≠sica
            end
        end

        targetCar:SetPrimaryPartCFrame(CFrame.new(x, y, z)) -- Move o carro inteiro

        for _, part in pairs(targetCar:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Anchored = false -- Desancorar as partes ap√≥s o movimento
            end
        end
    end
end

-- Fun√ß√£o para garantir que o jogador esteja desancorado corretamente
local function unanchorCharacter()
    if player.Character then
        for _, part in pairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Anchored = false
            end
        end
    end
end

-- Fun√ß√£o para monitorar e teleportar o jogador para o assento at√© sentar
local function monitorAndTeleport(targetCar)
    local seat = targetCar.Body:FindFirstChild("VehicleSeat")
    if not seat then
        print("Erro, assento do carro n√£o encontrado")
        return
    end

    -- Verificar se o jogador j√° est√° sentado
    if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
        local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid.SeatPart then
            print("Erro, voc√™ j√° est√° sentado em outro assento.")
            return
        end
    end

    -- Salvar posi√ß√£o original do jogador
    if player.Character and player.Character.PrimaryPart then
        originalPosition = player.Character.PrimaryPart.Position
    else
        print("Erro, posi√ß√£o do jogador n√£o encontrada")
        return
    end

    -- Garantir que o jogador esteja desancorado inicialmente
    unanchorCharacter()

    -- Loop para tentar teleportar o jogador at√© sentar
    local timeout = 20 -- Limite de tentativas
    local success = false

    for i = 1, timeout do
        if player.Character and seat then
            -- Teletransporta o jogador para uma posi√ß√£o acima do assento
            player.Character:MoveTo(seat.Position + Vector3.new(0, 5, 0))
            task.wait(0.5) -- Intervalo para evitar sobrecarga

            -- Verifica se o jogador j√° est√° sentado
            if seat.Occupant and seat.Occupant.Parent == player.Character then
                success = true
                break
            end
        end
    end

    if success then
        -- Teletransporta o carro de volta √† posi√ß√£o original
        teleportCar(targetCar, originalPosition.X, originalPosition.Y, originalPosition.Z)
        print("Sucesso, carro puxado com sucesso")
    else
        print("Erro, Falha ao puxar carro")
        -- Se falhar, retorna o jogador √† posi√ß√£o original para evitar bugs
        if player.Character then
            player.Character:MoveTo(originalPosition + Vector3.new(0, 5, 0))
        end
    end

    -- Garante que o jogador n√£o fique bugado
    task.wait(1)
    unanchorCharacter()
end

-- Fun√ß√£o para atualizar a lista de carros
local function updateCars()
    cars = {}

    for _, v in pairs(workspace.Vehicles:GetChildren()) do
        if v:FindFirstChild("Body") and v.Body:FindFirstChild("VehicleSeat") then
            local driverName = v.Name -- Nome do carro (geralmente o nome do jogador dono)
            cars[driverName] = v
        end
    end

    print("Lista de carros atualizada")
end

-- Fun√ß√£o para encontrar o carro do jogador com base no nome digitado
local function findCarByPlayerName(partialName)
    partialName = partialName:lower()
    for playerName, car in pairs(cars) do
        if playerName:lower():sub(1, #partialName) == partialName then
            return car
        end
    end
    return nil
end

Tab1:AddTextBox({
  Name = "Digite o Nome de um Jogador",
  Description = "Digite o Nome de um Jogador para Puxar o Carro dele.",
  Default = "",
  Callback = function(PlayerCarValue)
    selectedPlayer = PlayerCarValue
    print("Jogador selecionado:", PlayerCarValue) -- Para verificar se est√° funcionando
  end
})

Tab1:AddButton({"Puxar Carro", function()
  if selectedPlayer ~= "" then
    local targetCar = findCarByPlayerName(selectedPlayer)
    if targetCar then
        monitorAndTeleport(targetCar)
    else
        print("Erro, Ve√≠culo n√£o encontrado para o jogador informado.")
    end
  else
    print("Erro, Nenhum nome de jogador digitado")
  end
end})

-- Atualiza a lista de carros dinamicamente quando ve√≠culos s√£o adicionados ou removidos
workspace.Vehicles.ChildAdded:Connect(function()
    print("Carro adicionado, atualizando lista...")
    task.wait(0.5) -- Aguardar para garantir consist√™ncia
    updateCars()
end)

workspace.Vehicles.ChildRemoved:Connect(function()
    print("Carro removido, atualizando lista...")
    task.wait(0.5) -- Aguardar para garantir consist√™ncia
    updateCars()
end)

game.Players.PlayerAdded:Connect(function()
    task.wait(0.5)
    updateCars()
end)

game.Players.PlayerRemoving:Connect(function()
    task.wait(0.5)
    updateCars()
end)

-- Atualiza a lista de carros inicialmente
updateCars()

 Tab1:AddSection({"ESP Carros"})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

local ESPEnabled = false
local ESPObjects = {}

local function createESP(car)
    if ESPObjects[car] then return end -- Evita duplica√ß√£o

    local playerName = car.Name -- Mant√©m o nome completo do carro

    local highlight = Instance.new("Highlight")
    highlight.FillColor = Color3.new(1, 1, 1)
    highlight.FillTransparency = 0.5
    highlight.OutlineColor = Color3.new(1, 1, 1)
    highlight.Parent = car

    local billboard = Instance.new("BillboardGui")
    billboard.Size = UDim2.new(0, 150, 0, 30) -- Menor tamanho
    billboard.StudsOffset = Vector3.new(0, 5, 0) -- Posi√ß√£o acima do carro
    billboard.Adornee = car.PrimaryPart or car:FindFirstChildWhichIsA("BasePart")
    billboard.AlwaysOnTop = true
    billboard.Parent = car

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = Color3.new(1, 1, 1)
    textLabel.TextStrokeTransparency = 1 -- Remove linha preta
    textLabel.TextScaled = false
    textLabel.Font = Enum.Font.SourceSansBold
    textLabel.TextSize = 14 -- Texto menor
    textLabel.Parent = billboard

    ESPObjects[car] = {highlight = highlight, billboard = billboard, textLabel = textLabel, playerName = playerName}
end

local function updateESP()
    for car, objects in pairs(ESPObjects) do
        if car and car.Parent then
            local humanoidRootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            local carPart = car.PrimaryPart or car:FindFirstChildWhichIsA("BasePart")

            if humanoidRootPart and carPart then
                local distance = (humanoidRootPart.Position - carPart.Position).Magnitude
                objects.textLabel.Text = objects.playerName .. " | " .. math.floor(distance) .. "m"
            else
                objects.textLabel.Text = objects.playerName .. " | ???m"
            end
        else
            objects.highlight:Destroy()
            objects.billboard:Destroy()
            ESPObjects[car] = nil
        end
    end
end

local function toggleESP(state)
    ESPEnabled = state
    if state then
        for _, car in ipairs(workspace.Vehicles:GetChildren()) do
            if car:IsA("Model") and car.Name:match("Car$") then
                createESP(car)
            end
        end
    else
        for _, objects in pairs(ESPObjects) do
            objects.highlight:Destroy()
            objects.billboard:Destroy()
        end
        ESPObjects = {}
    end
end

workspace.Vehicles.ChildAdded:Connect(function(car)
    if ESPEnabled and car:IsA("Model") and car.Name:match("Car$") then
        createESP(car)
    end
end)

RunService.RenderStepped:Connect(function()
    if ESPEnabled then
        updateESP()
    end
end)

local Toggle = Tab1:AddToggle({
  Name = "ESP Carros",
  Default = false,
  Callback = function(ESPCarValue)
    toggleESP(ESPCarValue)
  end
})

 Tab1:AddSection({"Corpos de Avatar Personalizados"})

-- Vari√°veis globais para armazenar os IDs
local IDs = {
    Tronco = "",
    BracoDireito = "",
    BracoEsquerdo = "",
    PernaDireita = "",
    PernaEsquerda = "",
    Cabeca = ""
}

-- Fun√ß√£o para criar Textbox
local function AddTextbox(tab, name, key)
    tab:AddTextBox({
        Name = name,
        Description = "Insira o ID",
        Default = "",
        Callback = function(Value)
            IDs[key] = Value -- Armazena o valor no dicion√°rio
        end
    })
end

-- Adicionando os campos de entrada
AddTextbox(Tab1, "ID Do Tronco", "Tronco")
AddTextbox(Tab1, "ID Do Bra√ßo Direito", "BracoDireito")
AddTextbox(Tab1, "ID Do Bra√ßo Esquerdo", "BracoEsquerdo")
AddTextbox(Tab1, "ID Da Perna Direita", "PernaDireita")
AddTextbox(Tab1, "ID Da Perna Esquerda", "PernaEsquerda")
AddTextbox(Tab1, "ID Da Cabe√ßa", "Cabeca")

-- Bot√£o para enviar os dados
Tab1:AddButton({
    Name = "Enviar",
    Callback = function()
        -- Define as vari√°veis locais, usando nil se estiver vazio
        local tronco = (IDs.Tronco ~= "" and IDs.Tronco or nil)
        local bracodireito = (IDs.BracoDireito ~= "" and IDs.BracoDireito or nil)
        local bracoesquerdo = (IDs.BracoEsquerdo ~= "" and IDs.BracoEsquerdo or nil)
        local pernadireita = (IDs.PernaDireita ~= "" and IDs.PernaDireita or nil)
        local pernaesquerda = (IDs.PernaEsquerda ~= "" and IDs.PernaEsquerda or nil)
        local cabeca = (IDs.Cabeca ~= "" and IDs.Cabeca or nil)

        -- Monta os argumentos com poss√≠veis valores nil
        local args = {
            [1] = {
                [1] = tronco,
                [2] = bracodireito,
                [3] = bracoesquerdo,
                [4] = pernadireita,
                [5] = pernaesquerda,
                [6] = cabeca
            }
        }

        -- Invoca o RemoteFunction
        local remoteFunction = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):FindFirstChild("ChangeCharacterBody")
        if remoteFunction then
            local success, result = pcall(function()
                return remoteFunction:InvokeServer(unpack(args))
            end)
            if success then
                print("Avatar equipado com sucesso")
            else
                warn("Erro ao equipar avatar:", result)
            end
        else
            warn("RemoteFunction 'ChangeCharacterBody' n√£o encontrado")
        end
    end
})

 Tab1:AddSection({"Armas"})

Tab1:AddTextBox({
  Name = "ID de Imagem nas Armas",
  Description = "Insira um ID de Imagem com a arma na m√£o, assim ela ficar√° com a textura da Imagem",
  Default = "",
  Callback = function(GunImageValue)
    local args = {
    [1] = "RequestingGunSkins",
    [2] = GunImageValue
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Clea1rTool1s"):FireServer(unpack(args))

  end
})

 Tab1:AddSection({"Outdoors"})

local TextLabel = Tab1:AddLabel({"Text", "Inserir Texto em Todos os Outdoors:"})

local lastPosition
local textInput = ""

Tab1:AddTextBox({
  Name = "Digite o texto",
  Description = "Inserir texto em todos os Outdoors",
  Default = "",
  Callback = function(Value)
    textInput = Value
  end
})

Tab1:AddButton({"Enviar", function()
         if textInput == "" then return end

        local player = game.Players.LocalPlayer
        if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end

        local hrp = player.Character.HumanoidRootPart
        lastPosition = hrp.Position  -- Salva a posi√ß√£o inicial

        local function teleport(x, y, z)
            hrp.CFrame = CFrame.new(Vector3.new(x, y, z))
            task.wait(0.5) -- Pequeno delay para garantir o teleporte
        end

        local function executeFunction(code)
            local args = {
                [1] = "ReturningCommercialWords",
                [2] = code,
                [4] = textInput
            }
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Cemeter1y"):FireServer(unpack(args))
            task.wait(0.5) -- Pequeno delay para garantir a execu√ß√£o
        end

        -- Sequ√™ncia de execu√ß√µes
        teleport(-633, 24, 361)
        executeFunction(2)

        teleport(443, 62, 512)
        executeFunction(1)

        teleport(-239, 88, -548)
        executeFunction(3)

        task.wait(1) -- Espera 1 segundo antes de voltar

        if lastPosition then
            hrp.CFrame = CFrame.new(lastPosition)
        end
end})

local TextLabel = Tab1:AddLabel({"Text", "Inserir Texto em Determinados Outdoors:"})

local lastPosition
local text1, text2, text3 = "", "", ""

Tab1:AddTextBox({
  Name = "Digite o Texto (Primeiro Outdoor)",
  Description = "Texto 1",
  Default = "",
  Callback = function(Value)
    text1 = Value
  end
})

Tab1:AddTextBox({
  Name = "Digite o Texto (Segundo Outdoor)",
  Description = "Texto 2",
  Default = "",
  Callback = function(Value)
    text2 = Value
  end
})

Tab1:AddTextBox({
  Name = "Digite o Texto (Terceiro Outdoor)",
  Description = "Texto 3",
  Default = "",
  Callback = function(Value)
    text3 = Value
  end
})

Tab1:AddButton({"Enviar", function()
  local player = game.Players.LocalPlayer
        if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end

        local hrp = player.Character.HumanoidRootPart
        lastPosition = hrp.Position  -- Salva a posi√ß√£o inicial

        local function teleport(x, y, z)
            hrp.CFrame = CFrame.new(Vector3.new(x, y, z))
            task.wait(0.5) -- Delay para garantir o teleporte
        end

        local function executeFunction(code, text)
            local args = {
                [1] = "ReturningCommercialWords",
                [2] = code,
                [4] = text
            }
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Cemeter1y"):FireServer(unpack(args))
            task.wait(0.5) -- Delay para garantir a execu√ß√£o
        end

        -- Sequ√™ncia de execu√ß√µes com cada textbox
        teleport(-633, 24, 361)
        executeFunction(2, text1)

        teleport(443, 62, 512)
        executeFunction(1, text2)

        teleport(-239, 88, -548)
        executeFunction(3, text3)

        task.wait(1) -- Espera 1 segundo antes de voltar

        if lastPosition then
            hrp.CFrame = CFrame.new(lastPosition)
        end
end})

Tab1:AddSection({"Anima√ß√µes do Workspace"})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local Animations = {
    Machado = "rbxassetid://97918836261436",
    Martelo = "rbxassetid://96701378431739",
    ChaveDeFenda = "rbxassetid://108300656701718"
}

local ActiveTracks = {}

local function playAnimation(animationId)
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        local Humanoid = LocalPlayer.Character.Humanoid
        local Animator = Humanoid:FindFirstChild("Animator") or Instance.new("Animator", Humanoid)
        local Animation = Instance.new("Animation")
        Animation.AnimationId = animationId
        local Track = Animator:LoadAnimation(Animation)
        Track.Looped = true
        Track:Play()
        return Track
    end
end

local function onCharacterAdded()
    task.wait(1)
    for key, track in pairs(ActiveTracks) do
        if track then
            ActiveTracks[key] = playAnimation(Animations[key])
        end
    end
end

LocalPlayer.CharacterAdded:Connect(onCharacterAdded)

local function createToggle(name, animationId)
    Tab1:AddToggle({
        Name = name,
        Default = false,
        Callback = function(state)
            if state then
                ActiveTracks[name] = playAnimation(animationId)
            else
                if ActiveTracks[name] then
                    ActiveTracks[name]:Stop()
                    ActiveTracks[name] = nil
                end
            end
        end
    })
end

createToggle("Machado", Animations.Machado)
createToggle("Martelo", Animations.Martelo)
createToggle("Chave de Fenda", Animations.ChaveDeFenda)

Tab1:AddSection({"Outros"})

Tab1:AddButton({"Executar Infinite Yield", function()
  loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
end})

Tab1:AddButton({"Executar Credit X", function()
  loadstring(game:HttpGet(('https://raw.githubusercontent.com/0Ben1/fe/main/obf_5wpM7bBcOPspmX7lQ3m75SrYNWqxZ858ai3tJdEAId6jSI05IOUB224FQ0VSAswH.lua.txt'),true))()
end})

Tab1:AddButton({"Executar Fly Gui (By Conta Teste)", function()
  local main = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local up = Instance.new("TextButton")
local UICorner_2 = Instance.new("UICorner")
local down = Instance.new("TextButton")
local UICorner_3 = Instance.new("UICorner")
local onof = Instance.new("TextButton")
local UICorner_4 = Instance.new("UICorner")
local TextLabel = Instance.new("TextLabel")
local plus = Instance.new("TextButton")
local UICorner_5 = Instance.new("UICorner")
local speed = Instance.new("TextLabel")
local UICorner_6 = Instance.new("UICorner")
local mine = Instance.new("TextButton")
local UICorner_7 = Instance.new("UICorner")
local closebutton = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local mini = Instance.new("TextButton")
local UICorner_9 = Instance.new("UICorner")
local mini2 = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")

-- Properties
main.Name = "main"
main.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
main.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
main.ResetOnSpawn = false

Frame.Parent = main
Frame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
Frame.BackgroundTransparency = 0.5
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.1, 0, 0.38, 0)
Frame.Size = UDim2.new(0, 200, 0, 120)
Frame.Active = true
Frame.Draggable = true

UICorner.Parent = Frame

up.Name = "up"
up.Parent = Frame
up.BackgroundColor3 = Color3.fromRGB(215, 255, 121)
up.Position = UDim2.new(0.025, 0, 0.3, 0)
up.Size = UDim2.new(0, 40, 0, 25)
up.Font = Enum.Font.GothamBold
up.Text = "UP"
up.TextColor3 = Color3.fromRGB(0, 0, 0)
up.TextSize = 12.000
up.TextStrokeTransparency = 0.000

UICorner_2.Parent = up

down.Name = "down"
down.Parent = Frame
down.BackgroundColor3 = Color3.fromRGB(215, 255, 121)
down.Position = UDim2.new(0.025, 0, 0.55, 0)
down.Size = UDim2.new(0, 40, 0, 25)
down.Font = Enum.Font.GothamBold
down.Text = "DOWN"
down.TextColor3 = Color3.fromRGB(0, 0, 0)
down.TextSize = 12.000
down.TextStrokeTransparency = 0.000

UICorner_3.Parent = down

onof.Name = "onof"
onof.Parent = Frame
onof.BackgroundColor3 = Color3.fromRGB(215, 255, 121)
onof.Position = UDim2.new(0.525, 0, 0.55, 0)
onof.Size = UDim2.new(0, 80, 0, 25)
onof.Font = Enum.Font.GothamBold
onof.Text = "FLY"
onof.TextColor3 = Color3.fromRGB(0, 0, 0)
onof.TextSize = 12.000
onof.TextStrokeTransparency = 0.000

UICorner_4.Parent = onof

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(215, 255, 121)
TextLabel.Position = UDim2.new(0.025, 0, 0.05, 0)
TextLabel.Size = UDim2.new(0, 190, 0, 20)
TextLabel.Font = Enum.Font.GothamBold
TextLabel.Text = "FLY GUI"
TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.TextSize = 14.000
TextLabel.TextStrokeTransparency = 0.000

local TextLabelCorner = Instance.new("UICorner")
TextLabelCorner.Parent = TextLabel
TextLabelCorner.CornerRadius = UDim.new(0, 6)  -- Ajuste este valor para mudar o qu√£o arredondado fica

plus.Name = "plus"
plus.Parent = Frame
plus.BackgroundColor3 = Color3.fromRGB(215, 255, 121)
plus.Position = UDim2.new(0.275, 0, 0.3, 0)
plus.Size = UDim2.new(0, 40, 0, 25)
plus.Font = Enum.Font.GothamBold
plus.Text = "+"
plus.TextColor3 = Color3.fromRGB(0, 0, 0)
plus.TextSize = 12.000
plus.TextStrokeTransparency = 0.000

UICorner_5.Parent = plus

speed.Name = "speed"
speed.Parent = Frame
speed.BackgroundColor3 = Color3.fromRGB(215, 255, 121)
speed.Position = UDim2.new(0.525, 0, 0.3, 0)
speed.Size = UDim2.new(0, 80, 0, 25)
speed.Font = Enum.Font.GothamBold
speed.Text = "1"
speed.TextColor3 = Color3.fromRGB(0, 0, 0)
speed.TextSize = 14.000
speed.TextStrokeTransparency = 0.000

UICorner_6.Parent = speed

mine.Name = "mine"
mine.Parent = Frame
mine.BackgroundColor3 = Color3.fromRGB(215, 255, 121)
mine.Position = UDim2.new(0.275, 0, 0.55, 0)
mine.Size = UDim2.new(0, 40, 0, 25)
mine.Font = Enum.Font.GothamBold
mine.Text = "-"
mine.TextColor3 = Color3.fromRGB(0, 0, 0)
mine.TextSize = 14.000
mine.TextStrokeTransparency = 0.000

UICorner_7.Parent = mine

closebutton.Name = "Close"
closebutton.Parent = Frame
closebutton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
closebutton.Font = Enum.Font.GothamBold
closebutton.Size = UDim2.new(0, 20, 0, 20)
closebutton.Text = "X"
closebutton.TextColor3 = Color3.fromRGB(255, 255, 255)
closebutton.TextSize = 14.000
closebutton.Position = UDim2.new(0.87, 0, 0.05, 0)  -- X mais √† esquerda (82% da largura)

UICorner_8.Parent = closebutton

mini.Name = "minimize"
mini.Parent = Frame
mini.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
mini.Font = Enum.Font.GothamBold
mini.Size = UDim2.new(0, 20, 0, 20)
mini.Text = "-"
mini.TextColor3 = Color3.fromRGB(255, 255, 255)
mini.TextSize = 14.000
mini.Position = UDim2.new(0.75, 0, 0.05, 0)  -- "-" mais √† direita (88% da largura, 6% de dist√¢ncia do X)

UICorner_9.Parent = mini

mini2.Name = "minimize2"
mini2.Parent = Frame
mini2.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
mini2.Font = Enum.Font.GothamBold
mini2.Size = UDim2.new(0, 20, 0, 20)
mini2.Text = "+"
mini2.TextColor3 = Color3.fromRGB(255, 255, 255)
mini2.TextSize = 14.000
mini2.Position = UDim2.new(0.75, 0, 0.05, 0)  -- "+" na mesma posi√ß√£o do "_"
mini2.Visible = false

UICorner_10.Parent = mini2

-- Script Variables
speeds = 1
local speaker = game:GetService("Players").LocalPlayer
local chr = game.Players.LocalPlayer.Character
local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
nowe = false

-- Notification
game:GetService("StarterGui"):SetCore("SendNotification", { 
    Title = "Fly Gui",
    Text = "Modificado Por Conta Teste/bypassadonis",
    Icon = "rbxassetid://80207277898165",
    Duration = 5
})

-- Fly Functionality
onof.MouseButton1Down:connect(function()
    if nowe == true then
        nowe = false
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)
        speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
    else 
        nowe = true
        for i = 1, speeds do
            spawn(function()
                local hb = game:GetService("RunService").Heartbeat    
                tpwalking = true
                local chr = game.Players.LocalPlayer.Character
                local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
                while tpwalking and hb:Wait() and chr and hum and hum.Parent do
                    if hum.MoveDirection.Magnitude > 0 then
                        chr:TranslateBy(hum.MoveDirection)
                    end
                end
            end)
        end
        game.Players.LocalPlayer.Character.Animate.Disabled = true
        local Char = game.Players.LocalPlayer.Character
        local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

        for i,v in next, Hum:GetPlayingAnimationTracks() do
            v:AdjustSpeed(0)
        end
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,false)
        speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
    end

    if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid").RigType == Enum.HumanoidRigType.R6 then
        local plr = game.Players.LocalPlayer
        local torso = plr.Character.Torso
        local flying = true
        local deb = true
        local ctrl = {f = 0, b = 0, l = 0, r = 0}
        local lastctrl = {f = 0, b = 0, l = 0, r = 0}
        local maxspeed = 50
        local speed = 0

        local bg = Instance.new("BodyGyro", torso)
        bg.P = 9e4
        bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
        bg.cframe = torso.CFrame
        local bv = Instance.new("BodyVelocity", torso)
        bv.velocity = Vector3.new(0,0.1,0)
        bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
        if nowe == true then
            plr.Character.Humanoid.PlatformStand = true
        end
        while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
            game:GetService("RunService").RenderStepped:Wait()

            if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
                speed = speed+.5+(speed/maxspeed)
                if speed > maxspeed then
                    speed = maxspeed
                end
            elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
                speed = speed-1
                if speed < 0 then
                    speed = 0
                end
            end
            if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
                bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
                lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
            elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
                bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
            else
                bv.velocity = Vector3.new(0,0,0)
            end
            bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
        end
        ctrl = {f = 0, b = 0, l = 0, r = 0}
        lastctrl = {f = 0, b = 0, l = 0, r = 0}
        speed = 0
        bg:Destroy()
        bv:Destroy()
        plr.Character.Humanoid.PlatformStand = false
        game.Players.LocalPlayer.Character.Animate.Disabled = false
        tpwalking = false
    else
        local plr = game.Players.LocalPlayer
        local UpperTorso = plr.Character.UpperTorso
        local flying = true
        local deb = true
        local ctrl = {f = 0, b = 0, l = 0, r = 0}
        local lastctrl = {f = 0, b = 0, l = 0, r = 0}
        local maxspeed = 50
        local speed = 0

        local bg = Instance.new("BodyGyro", UpperTorso)
        bg.P = 9e4
        bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
        bg.cframe = UpperTorso.CFrame
        local bv = Instance.new("BodyVelocity", UpperTorso)
        bv.velocity = Vector3.new(0,0.1,0)
        bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
        if nowe == true then
            plr.Character.Humanoid.PlatformStand = true
        end
        while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
            wait()

            if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
                speed = speed+.5+(speed/maxspeed)
                if speed > maxspeed then
                    speed = maxspeed
                end
            elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
                speed = speed-1
                if speed < 0 then
                    speed = 0
                end
            end
            if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
                bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
                lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
            elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
                bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
            else
                bv.velocity = Vector3.new(0,0,0)
            end

            bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
        end
        ctrl = {f = 0, b = 0, l = 0, r = 0}
        lastctrl = {f = 0, b = 0, l = 0, r = 0}
        speed = 0
        bg:Destroy()
        bv:Destroy()
        plr.Character.Humanoid.PlatformStand = false
        game.Players.LocalPlayer.Character.Animate.Disabled = false
        tpwalking = false
    end
end)

local tis
up.MouseButton1Down:connect(function()
    tis = up.MouseEnter:connect(function()
        while tis do
            wait()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,1,0)
        end
    end)
end)

up.MouseLeave:connect(function()
    if tis then
        tis:Disconnect()
        tis = nil
    end
end)

local dis
down.MouseButton1Down:connect(function()
    dis = down.MouseEnter:connect(function()
        while dis do
            wait()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-1,0)
        end
    end)
end)

down.MouseLeave:connect(function()
    if dis then
        dis:Disconnect()
        dis = nil
    end
end)

game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(char)
    wait(0.7)
    game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
    game.Players.LocalPlayer.Character.Animate.Disabled = false
end)

plus.MouseButton1Down:connect(function()
    speeds = speeds + 1
    speed.Text = speeds
    if nowe == true then
        tpwalking = false
        for i = 1, speeds do
            spawn(function()
                local hb = game:GetService("RunService").Heartbeat    
                tpwalking = true
                local chr = game.Players.LocalPlayer.Character
                local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
                while tpwalking and hb:Wait() and chr and hum and hum.Parent do
                    if hum.MoveDirection.Magnitude > 0 then
                        chr:TranslateBy(hum.MoveDirection)
                    end
                end
            end)
        end
    end
end)

mine.MouseButton1Down:connect(function()
    if speeds == 1 then
        speed.Text = 'cannot be less than 1'
        wait(1)
        speed.Text = speeds
    else
        speeds = speeds - 1
        speed.Text = speeds
        if nowe == true then
            tpwalking = false
            for i = 1, speeds do
                spawn(function()
                    local hb = game:GetService("RunService").Heartbeat    
                    tpwalking = true
                    local chr = game.Players.LocalPlayer.Character
                    local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
                    while tpwalking and hb:Wait() and chr and hum and hum.Parent do
                        if hum.MoveDirection.Magnitude > 0 then
                            chr:TranslateBy(hum.MoveDirection)
                        end
                    end
                end)
            end
        end
    end
end)

closebutton.MouseButton1Click:Connect(function()
    main:Destroy()
end)

mini.MouseButton1Click:Connect(function()
    up.Visible = false
    down.Visible = false
    onof.Visible = false
    plus.Visible = false
    speed.Visible = false
    mine.Visible = false
    mini.Visible = false
    mini2.Visible = true
    Frame.Size = UDim2.new(0, 200, 0, 30)
end)

mini2.MouseButton1Click:Connect(function()
    up.Visible = true
    down.Visible = true
    onof.Visible = true
    plus.Visible = true
    speed.Visible = true
    mine.Visible = true
    mini.Visible = true
    mini2.Visible = false
    Frame.Size = UDim2.new(0, 200, 0, 120)
end)
end})

local GuiService = game:GetService("GuiService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")

local autoRejoin = false
local connection

local function enableAutoRejoin()
    connection = GuiService.ErrorMessageChanged:Connect(function()
        local errorMessage = GuiService:GetErrorMessage()
        if errorMessage and errorMessage ~= "" then
            warn("Erro detectado: " .. errorMessage)
            task.wait(8) -- Aguarda um pouco antes de dar rejoin
            
            local player = Players.LocalPlayer
            local placeId = game.PlaceId
            local jobId = game.JobId -- ID do servidor atual
            
            TeleportService:TeleportToPlaceInstance(placeId, jobId, player)
        end
    end)
end

local function disableAutoRejoin()
    if connection then
        connection:Disconnect()
        connection = nil
    end
end

local Toggle = Tab1:AddToggle({
  Name = "Auto Rejoin",
  Default = false,
  Callback = function(Value)
    autoRejoin = Value
        if autoRejoin then
            enableAutoRejoin()
        else
            disableAutoRejoin()
        end
  end
})

Tab1:AddButton({"Rejoin", function()
  local player = Players.LocalPlayer
        local placeId = game.PlaceId
        local jobId = game.JobId -- ID do servidor atual
        
        TeleportService:TeleportToPlaceInstance(placeId, jobId, player)
end})

-- Informa√ß√µes do Dia

 Dia:AddSection({"Informa√ß√µes do Dia"})

local horaLabel = Dia:AddLabel("Hora: Carregando...")
local dataLabel = Dia:AddLabel("Data: Carregando...")
local diaLabel = Dia:AddLabel("Dia da Semana: Carregando...")
local mesLabel = Dia:AddLabel("M√™s: Carregando...")

-- Fun√ß√£o para obter o nome do m√™s
local function getMonthName(monthNumber)
    local months = {
        "Janeiro", "Fevereiro", "Mar√ßo", "Abril", "Maio", "Junho",
        "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"
    }
    return months[monthNumber]
end

-- Fun√ß√£o para obter o nome do dia da semana
local function getWeekdayName(weekdayNumber)
    local weekdays = {
        "Domingo", "Segunda-feira", "Ter√ßa-feira", "Quarta-feira",
        "Quinta-feira", "Sexta-feira", "S√°bado"
    }
    return weekdays[weekdayNumber + 1] -- Lua come√ßa do 1, mas os dias come√ßam do 0
end

-- Atualizador de tempo em tempo real
spawn(function()
    while true do
        local now = os.date("*t") -- Tabela com data e hora atual
        local hora = string.format("%02d:%02d:%02d", now.hour, now.min, now.sec)
        local data = string.format("%02d/%02d/%04d", now.day, now.month, now.year)
        local diaSemana = getWeekdayName(now.wday - 1) -- Ajuste do √≠ndice
        local mesNome = getMonthName(now.month)

        horaLabel:Set("Hora: " .. hora)
        dataLabel:Set("Data: " .. data)
        diaLabel:Set("Dia da Semana: " .. diaSemana)
        mesLabel:Set("M√™s: " .. mesNome)

        wait(1) -- Atualiza a cada 1 segundo
    end
end)

-- Tools

 Tools:AddSection({"Duplica√ß√µes de Tools"})

local duping = false
local toolthatiwanttodupe = "Nemhum"
local oldcf

 Tools:AddDropdown({
    Name = "Selecione uma Tool para Duplicar",
    Options = {"Nenhum", "Bomb", "Bow", "Laptop", "Iphone", "Ipad", "FlashLight", "Money", "Paper", "Present", "Couch", "Sniper", "Assault", "Shotgun", "GlockBrown", "Glock", "Taser", "SWATShield", "Milk", "FishingRod", "FireX", "Sign", "Box", "Paperbag", "PaperbagFire", "Tree", "Crystals", "Crystal", "FireHose", "SprayCan"},
    Default = "Nenhum",
    MultiSelect = false,
    Callback = function(selected)
        toolthatiwanttodupe = selected
    end
})

Tools:AddTextBox({
    Name = "Quantidade de Tools para Duplicar",
    Description = "DupeTools",
    Default = "",
    Callback = function(value)
        siryessir = tonumber(value) or 1
    end
})

local function equipAllTools()
    local player = game.Players.LocalPlayer
    local char = player.Character or player.CharacterAdded:Wait()
    local backpack = player.Backpack

    for _, tool in pairs(backpack:GetChildren()) do
        if tool:IsA("Tool") then
            tool.Parent = char
        end
    end
end

local function resetCharacter()
    local player = game.Players.LocalPlayer
    if player.Character then
        player.Character:BreakJoints()  -- Reseta o personagem
    end

    player.CharacterAdded:Wait()  -- Espera o personagem renascer
    task.wait(1)  -- D√° um pequeno tempo antes de equipar as tools
    equipAllTools()  -- Equipa todas as tools ap√≥s o reset
end

local function resetCharacterStop()
    local player = game.Players.LocalPlayer
    if player.Character then
        player.Character:BreakJoints()  -- Reseta o personagem
    end
end

local Button = Tools:AddButton({
    Name = "Duplicar Tools",
    Callback = function()
        if safeskripz() then return end
        if toolthatiwanttodupe == "Nemhum" then return end

        duping = true
        local player = game.Players.LocalPlayer
        local char = player.Character

        if not char then return end
        oldcf = char.HumanoidRootPart.CFrame

        if char.Humanoid.Sit then
            char.Humanoid.Sit = false
            wait(0.1)
        end

        if game:GetService("Workspace"):FindFirstChild("Camera") then
            game:GetService("Workspace").Camera:Destroy()
        end

        char.HumanoidRootPart.CFrame = CFrame.new(999999999, -495, 999999999)
        char.HumanoidRootPart.Anchored = true

        wait(0.5)

        for _, item in pairs(char:GetChildren()) do
            if item:IsA("Tool") and item.Name ~= toolthatiwanttodupe then
                item.Parent = player.Backpack
            end
        end

        for _, item in pairs(player.Backpack:GetChildren()) do
            if item:IsA("Tool") and item.Name ~= toolthatiwanttodupe then
                item:Destroy()
            end
        end

        local function renameHandle(tool)
            if tool and tool:IsA("Tool") then
                local handle = tool:FindFirstChild("Handle")
                if handle then
                    handle.Name = "H‚Å•a‚Å•n‚Å•d‚Å•l‚Å•e"
                end
            end
        end

        for _, item in pairs(char:GetChildren()) do
            if item:IsA("Tool") and item.Name == toolthatiwanttodupe then
                renameHandle(item)
                item.Parent = player.Backpack
                item.Parent = char
            end
        end

        for i = 1, siryessir do
            if not duping then break end
            if game:GetService("Workspace"):FindFirstChild("Camera") then
                game:GetService("Workspace").Camera:Destroy()
            end

            local args = { [1] = "PickingTools", [2] = toolthatiwanttodupe }
            picktoolremote:InvokeServer(unpack(args))

            local tool = player.Backpack:WaitForChild(toolthatiwanttodupe)
            tool.Parent = char

            if not duping then break end
            wait()

            renameHandle(tool)
            tool.Parent = player.Backpack
            tool.Parent = char

            repeat wait() until not char:FindFirstChild(toolthatiwanttodupe)
        end

        char.HumanoidRootPart.Anchored = false
        wait()
        duping = false

        -- Reseta o personagem no final e equipa todas as tools
        resetCharacter()
    end
})

local StopButton = Tools:AddButton({
    Name = "Parar de Duplicar Tools",
    Callback = function()
        duping = false
        resetCharacterStop()
    end
})

Tools:AddSection({"Duplicar Guitarras"})

local player = game.Players.LocalPlayer
local humanoid = player.Character:WaitForChild("Humanoid")
local rootPart = player.Character:WaitForChild("HumanoidRootPart")
local dupeCountGuitar -- Vari√°vel para guitarras el√©tricas
local dupeCountGuitarAcoustic -- Vari√°vel para viol√µes

Tools:AddTextBox({
  Name = "Duplicar Guitarras",
  Description = "Digite o N√∫mero de Guitarras",
  Default = "",
  Callback = function(Value)
    dupeCountGuitar = tonumber(Value)
    if not dupeCountGuitar or dupeCountGuitar <= 0 then
      print("Por favor, insira um n√∫mero v√°lido")
    end
  end
})

Tools:AddButton({"Duplicar Guitarras", function()
  if dupeCountGuitar and dupeCountGuitar > 0 then
    local originalPosition = rootPart.CFrame -- Armazena a posi√ß√£o inicial
    local originalSpeed = humanoid.WalkSpeed -- Armazena a velocidade inicial

    -- Teleporta o jogador para o local da guitarra e desativa o movimento
    rootPart.CFrame = CFrame.new(-379.894, 18.474, 211.905)
    humanoid.WalkSpeed = 0

    -- Espera um pouco antes de come√ßar a duplica√ß√£o
    task.wait(1)

    -- Executa a duplica√ß√£o
    for i = 1, dupeCountGuitar do
      fireclickdetector(workspace.WorkspaceCom["001_GiveTools"].ElectricGuitar.ClickDetector)
      game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.F, false, game)
      task.wait(0.3) -- Aumenta o tempo de espera entre cada duplica√ß√£o
    end

    -- Aguarda e teleporta de volta
    task.wait(3)
    rootPart.CFrame = originalPosition
    humanoid.WalkSpeed = originalSpeed
  else
    print("Por favor, insira um n√∫mero v√°lido.")
  end
end})

Tools:AddSection({"Duplicar Viol√µes"})

Tools:AddTextBox({
  Name = "Duplicar Viol√µes",
  Description = "Digite o N√∫mero de Viol√µes",
  Default = "",
  Callback = function(Value)
    dupeCountGuitarAcoustic = tonumber(Value)
    if not dupeCountGuitarAcoustic or dupeCountGuitarAcoustic <= 0 then
      print("Por favor, insira um n√∫mero v√°lido")
    end
  end
})

-- Bot√£o para duplicar viol√µes
Tools:AddButton({"Duplicar Viol√µes", function()
  if dupeCountGuitarAcoustic and dupeCountGuitarAcoustic > 0 then
    local originalPosition = rootPart.CFrame -- Armazena a posi√ß√£o inicial
    local originalSpeed = humanoid.WalkSpeed -- Armazena a velocidade inicial

    -- Teleporta o jogador para o local do viol√£o e desativa o movimento
    rootPart.CFrame = CFrame.new(-379.894, 18.474, 211.905)
    humanoid.WalkSpeed = 0

    -- Espera um pouco antes de come√ßar a duplica√ß√£o
    task.wait(1)

    -- Executa a duplica√ß√£o
    for i = 1, dupeCountGuitarAcoustic do
      fireclickdetector(workspace.WorkspaceCom["001_GiveTools"].Guitar.ClickDetector)
      game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.F, false, game)
      task.wait(0.3) -- Aumenta o tempo de espera entre cada duplica√ß√£o
    end

    -- Aguarda e teleporta de volta
    task.wait(3)
    rootPart.CFrame = originalPosition
    humanoid.WalkSpeed = originalSpeed
  else
    print("Por favor, insira um n√∫mero v√°lido")
  end
end})

Tools:AddSection({"Mudar Grip de Tools"})

 Tools:AddDropdown({
  Name = "Selecionar √Çngulo",
  Description = "ToolsGrip",
  Options = {"Nenhum", "X", "Y", "Z"},
  Default = "Nenhum",
  Flag = "ToolsGrip",
  Callback = function(egergergergergsasdfsfcsdv)
    angleeeee = egergergergergsasdfsfcsdv
  end
})

Tools:AddTextBox({
  Name = "Dist√¢ncia",
  Description = "ToolsGrip",
  Default = "",
  Callback = function(wgnweifiqewfn)
    gripdistant = wgnweifiqewfn
  end
})

Tools:AddButton({"Definir Grip", function()
  if angleeeee == "Nenhum" then return end		
		if angleeeee == "X" then
			for weofij,wefoi in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
				if wefoi:IsA("Tool") then
					wefoi.Grip = wefoi.Grip + Vector3.new(gripdistant,0,0)
					wefoi.Parent = game.Players.LocalPlayer.Backpack
					wait()
					wefoi.Parent = game.Players.LocalPlayer.Character
				end
			end
	elseif angleeeee == "Y" then
		for weofij,wefoi in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
			if wefoi:IsA("Tool") then
				wefoi.Grip = wefoi.Grip + Vector3.new(0,gripdistant,0)
				wefoi.Parent = game.Players.LocalPlayer.Backpack
				wait()
				wefoi.Parent = game.Players.LocalPlayer.Character
			end
		end
	elseif angleeeee == "Z" then
		for weofij,wefoi in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
			if wefoi:IsA("Tool") then
				wefoi.Grip = wefoi.Grip + Vector3.new(0,0,gripdistant)
				wefoi.Parent = game.Players.LocalPlayer.Backpack
				wait()
				wefoi.Parent = game.Players.LocalPlayer.Character
			end
		end
  	end
end})

-- Vari√°vel global para controlar a interrup√ß√£o do processo
local stopProcess = false

-- Fun√ß√£o para resetar o personagem
local function resetCharacter()
    local player = game.Players.LocalPlayer
    if player.Character then
        player.Character:BreakJoints()  -- Reseta o personagem
    end
end

-- Fun√ß√£o principal para criar paredes, ch√£os, linhas ou cubos
local function createToolWallOrFloor(toolName, width, height, spacingX, spacingY, isFloor, isLine, isCube)
    safeskripz()

    -- Reinicia a vari√°vel de controle ao iniciar o processo
    stopProcess = false

    local nametools = toolName .. (isFloor and " floor lel" or (isLine and " line lel" or (isCube and " cube lel" or " wall lel")))
    local oldcframe = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

    -- Verifica se o personagem est√° sentado e o levanta
    if game.Players.LocalPlayer.Character.Humanoid.Sit == true then
        task.wait()
        game.Players.LocalPlayer.Character.Humanoid.Sit = false
    end

    wait(0.1)
    local args = { [1] = "ClearAllTools" }
    cleartoolremote:FireServer(unpack(args))

    -- Remove a c√¢mera se existir
    if game:GetService("Workspace"):FindFirstChild("Camera") then
        game:GetService("Workspace"):FindFirstChild("Camera"):Destroy()
    end

    -- Teleporta o personagem para uma posi√ß√£o segura
    for m = 1, 2 do
        task.wait()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(999999999.414, -490, 999999999.414, 0.974360406, -0.175734088, 0.14049761, -0.133441404, 0.0514053069, 0.989722729, -0.181150302, -0.983094692, 0.0266370922)
    end

    task.wait(0.2)
    game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
    wait(0.3)

    local duping = true
    local iterations = isLine and width or (isCube and width * height * width or width * height)

    -- Loop de duplica√ß√£o das ferramentas
    for m = 1, iterations do
        -- Verifica se o processo foi interrompido
        if stopProcess then
            game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
            resetCharacter() -- Reseta o personagem
            return
        end

        -- Remove a c√¢mera se existir
        if game:GetService("Workspace"):FindFirstChild("Camera") then
            game:GetService("Workspace"):FindFirstChild("Camera"):Destroy()
        end

        -- Pega a ferramenta
        local args = { [1] = "PickingTools", [2] = toolName }
        picktoolremote:InvokeServer(unpack(args))
        game:GetService("Players").LocalPlayer.Backpack:WaitForChild(toolName).Parent = game.Players.LocalPlayer.Character

        -- Verifica novamente se o processo foi interrompido
        if stopProcess then
            game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
            resetCharacter() -- Reseta o personagem
            return
        end

        wait()
        game:GetService("Players").LocalPlayer.Character[toolName]:FindFirstChild("Handle").Name = "H‚Å•a‚Å•n‚Å•d‚Å•l‚Å•e"
        game:GetService("Players").LocalPlayer.Character:FindFirstChild(toolName).Parent = game.Players.LocalPlayer.Backpack
        game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(toolName).Parent = game.Players.LocalPlayer.Character

        -- Espera at√© que a ferramenta seja removida do personagem
        repeat
            if game:GetService("Workspace"):FindFirstChild("Camera") then
                game:GetService("Workspace"):FindFirstChild("Camera"):Destroy()
            end
            wait()
        until game:GetService("Players").LocalPlayer.Character:FindFirstChild(toolName) == nil
    end

    -- Finaliza o processo
    game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
    repeat wait() until game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") == nil
    repeat wait() until game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

    local toolgrip = true
    duping = false
    wait()

    -- Posicionamento das ferramentas
    local tools = game.Players.LocalPlayer.Backpack:GetChildren()
    local baseCFrame = CFrame.new(0.0538333468, -0.264812469, -0.0177594293, 0.999998629, 0, 0.00164011808, 0, 1, 0, -0.00164011808, 0, 0.999998629)

    if isLine then
        -- Cria uma linha reta de ferramentas
        for i = 0, width - 1 do
            if tools[i + 1] then
                tools[i + 1].Grip = baseCFrame + Vector3.new(i * spacingX, spacingY, 0)
                tools[i + 1].Name = nametools
            end
        end
    elseif isCube then
        -- Cria um cubo de ferramentas
        for x = 0, width - 1 do
            for y = 0, height - 1 do
                for z = 0, width - 1 do
                    local toolIndex = x * height * width + y * width + z + 1
                    if tools[toolIndex] then
                        tools[toolIndex].Grip = baseCFrame + Vector3.new(x * spacingX, -y * spacingY, z * spacingX)
                        tools[toolIndex].Name = nametools
                    end
                end
            end
        end
    else
        -- Cria uma parede ou ch√£o de ferramentas
        for x = 0, width - 1 do
            for y = 0, height - 1 do
                local toolIndex = x * height + y + 1
                if tools[toolIndex] then
                    if isFloor then
                        tools[toolIndex].Grip = baseCFrame + Vector3.new(x * spacingX, 0, y * spacingY)
                    else
                        tools[toolIndex].Grip = baseCFrame + Vector3.new(x * spacingX, -y * spacingY, 0)
                    end
                    tools[toolIndex].Name = nametools
                end
            end
        end
    end

    -- Retorna o personagem √† posi√ß√£o original
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = oldcframe
    wait(0.5)

    -- Move as ferramentas para o personagem
    for _, tool in ipairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
        if tool:IsA("Tool") and tool.Name == nametools then
            tool.Parent = game:GetService("Players").LocalPlayer.Character
        end
    end
end

Tools:AddSection({"Parar Processo de Constru√ß√£o"})

Tools:AddButton({"Parar Processo de Constru√ß√£o", function()
    stopProcess = true
    resetCharacter()
end})

Tools:AddSection({"Constru√ß√µes com Extintores"})

Tools:AddButton({"Parede de Extintores 25x20", function()
    createToolWallOrFloor("FireX", 20, 25, 2, 2, false)
end})

Tools:AddButton({"Parede de Extintores 20x15", function()
    createToolWallOrFloor("FireX", 15, 20, 2, 2, false)
end})

Tools:AddButton({"Parede de Extintores 15x10", function()
    createToolWallOrFloor("FireX", 10, 15, 2, 2, false)
end})

Tools:AddButton({"Parede de Extintores 10x5", function()
    createToolWallOrFloor("FireX", 5, 10, 2, 2, false)
end})

Tools:AddButton({"Parede de Extintores 5x3", function()
    createToolWallOrFloor("FireX", 3, 5, 2, 2, false)
end})

Tools:AddButton({"Ch√£o de Extintores 25x20", function()
    createToolWallOrFloor("FireX", 20, 25, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de Extintores 20x15", function()
    createToolWallOrFloor("FireX", 15, 20, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de Extintores 15x10", function()
    createToolWallOrFloor("FireX", 10, 15, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de Extintores 10x5", function()
    createToolWallOrFloor("FireX", 5, 10, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de Extintores 5x3", function()
    createToolWallOrFloor("FireX", 3, 5, 7.5, 4, true)
end})

Tools:AddButton({"Cubo de Extintores", function()
    createToolWallOrFloor("FireX", 5, 5, 2, 2, false, false, true)
end})

Tools:AddButton({"Linha de Extintores", function()
    createToolWallOrFloor("FireX", 100, 1, 2, 0, false, true)
end})

-- Se√ß√£o para FireHose
 Tools:AddSection({"Constru√ß√µes com FireHose"})

Tools:AddButton({"Parede de FireHose 25x20", function()
    createToolWallOrFloor("FireHose", 20, 25, 2, 2, false)
end})

Tools:AddButton({"Parede de FireHose 20x15", function()
    createToolWallOrFloor("FireHose", 15, 20, 2, 2, false)
end})

Tools:AddButton({"Parede de FireHose 15x10", function()
    createToolWallOrFloor("FireHose", 10, 15, 2, 2, false)
end})

Tools:AddButton({"Parede de FireHose 10x5", function()
    createToolWallOrFloor("FireHose", 5, 10, 2, 2, false)
end})

Tools:AddButton({"Parede de FireHose 5x3", function()
    createToolWallOrFloor("FireHose", 3, 5, 2, 2, false)
end})

Tools:AddButton({"Ch√£o de FireHose 25x20", function()
    createToolWallOrFloor("FireHose", 20, 25, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de FireHose 20x15", function()
    createToolWallOrFloor("FireHose", 15, 20, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de FireHose 15x10", function()
    createToolWallOrFloor("FireHose", 10, 15, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de FireHose 10x5", function()
    createToolWallOrFloor("FireHose", 5, 10, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de FireHose 5x3", function()
    createToolWallOrFloor("FireHose", 3, 5, 7.5, 4, true)
end})

Tools:AddButton({"Cubo de FireHose", function()
    createToolWallOrFloor("FireHose", 5, 5, 2, 2, false, false, true)
end})

Tools:AddButton({"Linha de FireHose", function()
  createToolWallOrFloor("FireHose", 100, 1, 2, 0, false, true)
end})

Tools:AddSection({"Constru√ß√µes com Couch"})

Tools:AddButton({"Parede de Sof√° 25x20", function()
    createToolWallOrFloor("Couch", 20, 25, 7.5, 4, true)
end})

Tools:AddButton({"Parede de Sof√° 20x15", function()
    createToolWallOrFloor("Couch", 15, 20, 7.5, 4, true)
end})

Tools:AddButton({"Parede de Sof√° 15x10", function()
    createToolWallOrFloor("Couch", 10, 15, 7.5, 4, true)
end})

Tools:AddButton({"Parede de Sof√° 10x5", function()
    createToolWallOrFloor("Couch", 5, 10, 7.5, 4, true)
end})

Tools:AddButton({"Parede de Sof√° 5x3", function()
    createToolWallOrFloor("Couch", 3, 5, 7.5, 4, true)
end})

Tools:AddButton({"Cubo de Sof√°", function()
    createToolWallOrFloor("Couch", 5, 5, 2, 2, false, false, true)
end})

Tools:AddSection({"Constru√ß√µes com Lanternas"})

Tools:AddButton({"Parede de Lanternas 25x20", function()
    createToolWallOrFloor("FlashLight", 20, 25, 2, 2, false)
end})

Tools:AddButton({"Parede de Lanternas 20x15", function()
    createToolWallOrFloor("FlashLight", 15, 20, 2, 2, false)
end})

Tools:AddButton({"Parede de Lanternas 15x10", function()
    createToolWallOrFloor("FlashLight", 10, 15, 2, 2, false)
end})

Tools:AddButton({"Parede de Lanternas 10x5", function()
    createToolWallOrFloor("FlashLight", 5, 10, 2, 2, false)
end})

Tools:AddButton({"Parede de Lanternas 5x3", function()
    createToolWallOrFloor("FlashLight", 3, 5, 2, 2, false)
end})

Tools:AddButton({"Ch√£o de Lanternas 25x20", function()
    createToolWallOrFloor("FlashLight", 20, 25, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de Lanternas 20x15", function()
    createToolWallOrFloor("FlashLight", 15, 20, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de Lanternas 15x10", function()
    createToolWallOrFloor("FlashLight", 10, 15, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de Lanternas 10x5", function()
    createToolWallOrFloor("FlashLight", 5, 10, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de Lanternas 5x3", function()
    createToolWallOrFloor("FlashLight", 3, 5, 7.5, 4, true)
end})

Tools:AddButton({"Cubo de Lanternas", function()
    createToolWallOrFloor("FlashLight", 5, 5, 2, 2, false, false, true)
end})

Tools:AddButton({"Linha de Lanternas", function()
  createToolWallOrFloor("FlashLight", 100, 1, 2, 0, false, true)
end})

Tools:AddSection({"Constru√ß√µes com PaperbagFire"})

Tools:AddButton({"Parede de PaperbagFire 25x20", function()
    createToolWallOrFloor("PaperbagFire", 20, 25, 2, 2, false)
end})

Tools:AddButton({"Parede de PaperbagFire 20x15", function()
    createToolWallOrFloor("PaperbagFire", 15, 20, 2, 2, false)
end})

Tools:AddButton({"Parede de PaperbagFire 15x10", function()
    createToolWallOrFloor("PaperbagFire", 10, 15, 2, 2, false)
end})

Tools:AddButton({"Parede de PaperbagFire 10x5", function()
    createToolWallOrFloor("PaperbagFire", 5, 10, 2, 2, false)
end})

Tools:AddButton({"Parede de PaperbagFire 5x3", function()
    createToolWallOrFloor("PaperbagFire", 3, 5, 2, 2, false)
end})

Tools:AddButton({"Ch√£o de PaperbagFire 25x20", function()
    createToolWallOrFloor("PaperbagFire", 20, 25, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de PaperbagFire 20x15", function()
    createToolWallOrFloor("PaperbagFire", 15, 20, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de PaperbagFire 15x10", function()
    createToolWallOrFloor("PaperbagFire", 10, 15, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de PaperbagFire 10x5", function()
    createToolWallOrFloor("PaperbagFire", 5, 10, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de PaperbagFire 5x3", function()
    createToolWallOrFloor("PaperbagFire", 3, 5, 7.5, 4, true)
end})

Tools:AddButton({"Cubo de PaperbagFire", function()
    createToolWallOrFloor("PaperbagFire", 5, 5, 2, 2, false, false, true)
end})

Tools:AddButton({"Linha de PaperbagFire", function()
  createToolWallOrFloor("PaperbagFire", 100, 1, 2, 0, false, true)
end})

Tools:AddSection({"Constru√ß√µes com Crystal"})

Tools:AddButton({"Parede de Crystal 25x20", function()
    createToolWallOrFloor("Crystal", 20, 25, 2, 2, false)
end})

Tools:AddButton({"Parede de Crystal 20x15", function()
    createToolWallOrFloor("Crystal", 15, 20, 2, 2, false)
end})

Tools:AddButton({"Parede de Crystal 15x10", function()
    createToolWallOrFloor("Crystal", 10, 15, 2, 2, false)
end})

Tools:AddButton({"Parede de Crystal 10x5", function()
    createToolWallOrFloor("Crystal", 5, 10, 2, 2, false)
end})

Tools:AddButton({"Parede de Crystal 5x3", function()
    createToolWallOrFloor("Crystal", 3, 5, 2, 2, false)
end})

Tools:AddButton({"Ch√£o de Crystal 25x20", function()
    createToolWallOrFloor("Crystal", 20, 25, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de Crystal 20x15", function()
    createToolWallOrFloor("Crystal", 15, 20, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de Crystal 15x10", function()
    createToolWallOrFloor("Crystal", 10, 15, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de Crystal 10x5", function()
    createToolWallOrFloor("Crystal", 5, 10, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de Crystal 5x3", function()
    createToolWallOrFloor("Crystal", 3, 5, 7.5, 4, true)
end})

Tools:AddButton({"Cubo de Crystal", function()
    createToolWallOrFloor("Crystal", 5, 5, 2, 2, false, false, true)
end})

Tools:AddButton({"Linha de Crystal", function()
  createToolWallOrFloor("Crystal", 100, 1, 2, 0, false, true)
end})

Tools:AddSection({"Constru√ß√µes com Spray"})

Tools:AddButton({"Parede de Spray 25x20", function()
    createToolWallOrFloor("SprayCan", 20, 25, 2, 2, false)
end})

Tools:AddButton({"Parede de Spray 20x15", function()
    createToolWallOrFloor("SprayCan", 15, 20, 2, 2, false)
end})

Tools:AddButton({"Parede de Spray 15x10", function()
    createToolWallOrFloor("SprayCan", 10, 15, 2, 2, false)
end})

Tools:AddButton({"Parede de Spray 10x5", function()
    createToolWallOrFloor("SprayCan", 5, 10, 2, 2, false)
end})

Tools:AddButton({"Parede de Spray 5x3", function()
    createToolWallOrFloor("SprayCan", 3, 5, 2, 2, false)
end})

Tools:AddButton({"Ch√£o de Spray 25x20", function()
    createToolWallOrFloor("SprayCan", 20, 25, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de Spray 20x15", function()
    createToolWallOrFloor("SprayCan", 15, 20, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de Spray 15x10", function()
    createToolWallOrFloor("SprayCan", 10, 15, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de Spray 10x5", function()
    createToolWallOrFloor("SprayCan", 5, 10, 7.5, 4, true)
end})

Tools:AddButton({"Ch√£o de Spray 5x3", function()
    createToolWallOrFloor("SprayCan", 3, 5, 7.5, 4, true)
end})

Tools:AddButton({"Cubo de Spray", function()
    createToolWallOrFloor("SprayCan", 5, 5, 2, 2, false, false, true)
end})

Tools:AddButton({"Linha de Spray", function()
  createToolWallOrFloor("SprayCan", 100, 1, 2, 0, false, true)
end})

Tools:AddSection({"Constru√ß√µes com Escudo"})

Tools:AddButton({"Parede de Escudos 25x20", function()
    createToolWallOrFloor("SWATShield", 20, 25, 3, 3.5, false)
end})

Tools:AddButton({"Parede de Escudos 20x15", function()
    createToolWallOrFloor("SWATShield", 15, 20, 3, 3.5, false)
end})

Tools:AddButton({"Parede de Escudos 15x10", function()
    createToolWallOrFloor("SWATShield", 10, 15, 3, 3.5, false)
end})

Tools:AddButton({"Parede de Escudos 10x5", function()
    createToolWallOrFloor("SWATShield", 5, 10, 3, 3.5, false)
end})

Tools:AddButton({"Parede de Escudos 5x3", function()
    createToolWallOrFloor("SWATShield", 3, 5, 3, 3.5, false)
end})

Tools:AddSection({"Constru√ß√µes com PaintRoller"})

Tools:AddButton({"Linha de PaintRoller 1x1000 (Demorado)", function()
  createToolWallOrFloor("PaintRoller", 1000, 1, 2, 0, false, true)
end})

Tools:AddButton({"Linha de PaintRoller 1x500", function()
  createToolWallOrFloor("PaintRoller", 500, 1, 2, 0, false, true)
end})

Tools:AddButton({"Linha de PaintRoller 1x250", function()
  createToolWallOrFloor("PaintRoller", 250, 1, 2, 0, false, true)
end})

Tools:AddButton({"Linha de PaintRoller 1x200", function()
  createToolWallOrFloor("PaintRoller", 200, 1, 2, 0, false, true)
end})

Tools:AddButton({"Linha de PaintRoller 1x150", function()
  createToolWallOrFloor("PaintRoller", 150, 1, 2, 0, false, true)
end})

Tools:AddButton({"Linha de PaintRoller 1x100", function()
  createToolWallOrFloor("PaintRoller", 100, 1, 2, 0, false, true)
end})

Tools:AddButton({"Linha de PaintRoller 1x10", function()
  createToolWallOrFloor("PaintRoller", 10, 1, 2, 0, false, true)
end})

-- Detectores de Scripters

Detector:AddSection({"Detector de Rael Hub e Chaos Hub"})

local running = false
local connection
local notifiedPlayers = {}

local function detectUsers()
    if connection then connection:Disconnect() end
    connection = game:GetService("RunService").Heartbeat:Connect(function()
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            local bag = player:FindFirstChild("PlayersBag")
            if bag then
                local bio = bag:FindFirstChild("RPBio")
                local rpName = bag:FindFirstChild("RPName")
                if bio and rpName then
                    local bioValue = tostring(bio.Value):lower()
                    local nameValue = tostring(rpName.Value):lower()

                    local detectedRael = string.find(bioValue, "rael") or string.find(nameValue, "rael")
                    local detectedChaos = string.find(bioValue, "chaos") or string.find(nameValue, "chaos")

                    if detectedRael and not notifiedPlayers[player] then
                        Library:MakeNotify({
                            Title = "Usu√°rio de Rael Hub Detectado",
                            Text = player.Name .. " est√° usando Rael Hub",
                            Time = 5
                        })
                        notifiedPlayers[player] = "rael"
                    elseif detectedChaos and not notifiedPlayers[player] then
                        Library:MakeNotify({
                            Title = "Usu√°rio de Chaos Hub Detectado",
                            Text = player.Name .. " est√° usando Chaos Hub",
                            Time = 5
                        })
                        notifiedPlayers[player] = "chaos"
                    elseif not detectedRael and not detectedChaos then
                        notifiedPlayers[player] = nil
                    end
                end
            end
        end
    end)
end

Detector:AddToggle({
    Name = "Detectar Usu√°rios de Chaos Hub/Rael Hub",
    Default = false,
    Callback = function(Value)
        running = Value
        if running then
            notifiedPlayers = {}
            detectUsers()
        else
            if connection then
                connection:Disconnect()
                connection = nil
            end
            notifiedPlayers = {}
        end
    end
})

-- Client

Client:AddSection({"Client"})

local player = game:GetService("Players").LocalPlayer
local NewName = player.Name .. "ÓÄÄ"
local ativado = false
local loopRodando = false

local function atualizarNome()
    loopRodando = true
    while ativado do
        if player.DisplayName ~= NewName then
            player.DisplayName = NewName
        end
        task.wait(1)
    end
    loopRodando = false
end

Client:AddToggle({
  Name = "Ativar Verificado ÓÄÄ (Client)",
  Default = false,
  Callback = function(state)
    ativado = state
        if ativado and not loopRodando then
            task.spawn(atualizarNome)
        elseif not ativado then
            player.DisplayName = player.Name
        end
  end
})

-- Free Gamepass

local selectedId
local gamepassOptions = {
    "Vehicle Upgrade | 9066924",
    "Vehicle Speed Unlocked | 9066970",
    "Premium | 9066980",
    "Music Unlocked | 9066988",
    "On Demand Fire | 10991517",
    "Horse Unlocked | 10991687",
    "Land Unlocked | 13405328",
    "Faces Unlocked | 13489552",
    "Vehicle Pack | 15927395",
    "Penthouse | 19660651",
    "Theme Pack | 25341106",
    "Disaster Pass | 48857519",
    "Estates Unlocked | 82773869",
    "Boat Pack | 667983868",
    "VIP | 850049439",
}

FreeGamepass:AddSection({"Desbloquear Gamepass (FE)"})

FreeGamepass:AddParagraph({"Requisitos", "Voc√™ deve ter pelo menos 1 Gamepass do Jogo para que isso Funcione (Recomendado que Selecione a Horse Unlocked)"})
FreeGamepass:AddParagraph({"Como Desbloquear uma Gamepass?", "Selecione uma Gamepass que voc√™ j√° Possui, depois v√° na Gamepass que Voc√™ quer, clique para comprar, depois cancele a compra e clique em Desbloquear Gamepass/Desbloquear Todas as Gamepasses, ap√≥s isso essa Gamepass ser√° completamente liberada."})

FreeGamepass:AddDropdown({
  Name = "Selecione uma Gamepass que Voc√™ j√° Possui (Necess√°rio)",
  Options = gamepassOptions,
  Default = "",
  MultSelect = false,
  Callback = function(Value)
    selectedId = tonumber(string.match(Value, "%| (%d+)$"))
  end
})

FreeGamepass:AddButton({
  Name = "Desbloquear Gamepass",
  Callback = function()
  local MarketplaceService = game:GetService("MarketplaceService")
  
    if selectedId then
            local success, err = pcall(function()
                -- spoof da fun√ß√£o interna
                MarketplaceService:SignalPromptGamePassPurchaseFinished(Players.LocalPlayer, selectedId, true)
            end)
            Library:MakeNotify({
  Title = success and "Sucesso" or "Erro",
  Text = success and "Gamepass desbloqueada com sucesso" or tostring(err),
  Time = 5
})
        else
            Library:MakeNotify({
  Title = "Erro",
  Text = "Selecione uma Gamepass Primeiro (Uma que Voc√™ j√° Possui)",
  Time = 5
})
        end
  end
})

FreeGamepass:AddButton({
  Name = "Desbloquear Todas as Gamepasses",
  Callback = function()
  local args = {
    [1] = "BoughtColorSpeedLower"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Pas1s"):FireServer(unpack(args))

local args = {
    [1] = "BoughtPenthouse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Pas1s"):FireServer(unpack(args))

local args = {
    [1] = "BoughtPremium"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Pas1s"):FireServer(unpack(args))

local args = {
    [1] = "BoughtFire"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Pas1s"):FireServer(unpack(args))

local args = {
    [1] = "BoughtTheme"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Pas1s"):FireServer(unpack(args))

local args = {
    [1] = "BoughtFaces"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Pas1s"):FireServer(unpack(args))

local args = {
    [1] = "BoughtSpeed200"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Pas1s"):FireServer(unpack(args))

local args = {
    [1] = "BoughtMusic"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Pas1s"):FireServer(unpack(args))

local args = {
    [1] = "BoughtProperty"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Pas1s"):FireServer(unpack(args))

local args = {
    [1] = "BoughtDisaster"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Pas1s"):FireServer(unpack(args))

local args = {
    [1] = "BoughtVehiclePack"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Pas1s"):FireServer(unpack(args))

local args = {
    [1] = "BoughtBoatPack"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Pas1s"):FireServer(unpack(args))

local args = {
    [1] = "BoughtEstates"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Pas1s"):FireServer(unpack(args))

local args = {
    [1] = "BoughtVIP"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Pas1s"):FireServer(unpack(args))
  
  local MarketplaceService = game:GetService("MarketplaceService")
  
    if selectedId then
            local success, err = pcall(function()
                -- spoof da fun√ß√£o interna
                MarketplaceService:SignalPromptGamePassPurchaseFinished(Players.LocalPlayer, selectedId, true)
            end)
            Library:MakeNotify({
  Title = success and "Sucesso" or "Erro",
  Text = success and "Todas as Gamepasses desbloqueadas com sucesso" or tostring(err),
  Time = 5
})
        else
            Library:MakeNotify({
  Title = "Erro",
  Text = "Selecione uma Gamepass Primeiro (Uma que Voc√™ j√° Possui)",
  Time = 5
})
        end
  end
})

-- Cr√©ditos

Tab2:AddSection({"Cr√©ditos:"})

Tab2:AddLabel({"Image", "Conta Teste/bypassadonis ÓÄÄ", "rbxassetid://132874622413990"})

Library:SetTransparency(1)
VIPColors()

Window:AddMinimizeButton({
  Button = {
    -- Button Properties
    Image = "rbxassetid://80207277898165"
  },
  UICorner = {true,
    -- Corner Properties
    CornerRadius = UDim.new(0.5, 0)
  },
  UIStroke = {false, {
    -- Stroke Properties
  }}
})

Library:MakeNotify({
  Title = "Bem-vindo(a)",
  Text = "Bem-vindo ao Conta Teste Hub V3.3!",
  Time = 5
})
end

if isfile(savedKey) and readfile(savedKey) == validKey then
    MainFunction()
else
    
    local Window = Library:MakeWindow({
        Title = "Conta Teste Hub - Login",
        SubTitle = "By Conta Teste",
        LoadText = "Whitelist Key",
        Flags = "WhitelistKey"
    })

local Tab = Window:MakeTab({Name = "Login", Icon = "key"})

local keyInput = ""

Tab:AddSection({"Whitelist Key"})

Tab:AddTextBox({
  Name = "Digite sua Whitelist Key",
  Description = "WhitelistKey",
  Default = "",
  Callback = function(value)
    keyInput = value
  end
})

Tab:AddButton({
  Name = "Verificar Whitelist Key",
  Callback = function()
    if keyInput == validKey then
                writefile(savedKey, keyInput)
                MainFunction()
            end
  end
})

Library:SetTransparency(1)
end